#                                      9265,9685,9700,9715,
#                                     9716,9721,11025,11212,
#                                    11213,11417,11418,11419,
#                                   12879,12909,12912,13145,
#                                  13182,13774,13775,13784,
#                                 13827,14155,15234,15235,15892,
#                                15901,16518,16531,16533,16536) ~ FALSE,
#                TRUE ~ TRUE))%>%
filter(to_keep1) %>% select(-c( to_keep1)) %>%
#filter(to_keep2) %>% select(-c( to_keep2,rowname)) %>%
rename("dt_max_yield_mm" = "dt")
hobo_events5 <- inner_join(hobo_events2, hobo_events4,
by = c("site", "hobo_event_n"))
View(hobo_events2)
View(hobo_events4)
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4 %>% select(1:3),
by = c("site", "hobo_event_n")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c("site", "hobo_event_n")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
hobo_events5 <- hobo_events2
View(hobo_events2)
View(hobo_events4)
#manually keep the max yield rows and remove the duplicates
hobo_events4 <- hobo_events3 %>%
mutate(to_keep1 = case_when(yield_mm < max_yld_mm ~ FALSE,
TRUE ~ TRUE )) %>%
#mutate(to_keep2 = case_when (rowname %in% c(51,55,220,234,267,
#                                           1848,1859,1907,2746,
#                                         2990,4203,4207,4210,
#                                         5408,5574,5672,5674,
#                                        5816,5904,7423,7679,
#                                       7981,8536,8537,8691,
#                                      9265,9685,9700,9715,
#                                     9716,9721,11025,11212,
#                                    11213,11417,11418,11419,
#                                   12879,12909,12912,13145,
#                                  13182,13774,13775,13784,
#                                 13827,14155,15234,15235,15892,
#                                15901,16518,16531,16533,16536) ~ FALSE,
#                TRUE ~ TRUE))%>%
filter(to_keep1) %>% select(-c( to_keep1,rowname)) %>%
#filter(to_keep2) %>% select(-c( to_keep2,rowname)) %>%
rename("dt_max_yield_mm" = "dt")
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c("site", "hobo_event_n"))
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c("site")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(dygraphs)
library(xts)
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
hobo_events2 <- hobo_events%>%
pivot_longer(cols = contains("_mm"), names_to = "site",
values_to = "yield_mm")%>%
group_by(site, dt) %>%
arrange(dt)%>%
ungroup()%>%
select(dt, site,  yield_mm, hobo_event_n)%>%
drop_na()
#Calculate event statistics
hobo_max <- hobo_events2 %>%
group_by(site, hobo_event_n) %>%
arrange(dt)%>%
dplyr::summarise(max_yld_mm = max(yield_mm, na.rm=T))
#Join the max rate with the time series to access the time of max for each event
hobo_events3 <- inner_join(hobo_max, hobo_events2,
by = c("site", "hobo_event_n")) %>%
rownames_to_column()
#manually keep the max yield rows and remove the duplicates
hobo_events4 <- hobo_events3 %>%
mutate(to_keep1 = case_when(yield_mm < max_yld_mm ~ FALSE,
TRUE ~ TRUE )) %>%
#mutate(to_keep2 = case_when (rowname %in% c(51,55,220,234,267,
#                                           1848,1859,1907,2746,
#                                         2990,4203,4207,4210,
#                                         5408,5574,5672,5674,
#                                        5816,5904,7423,7679,
#                                       7981,8536,8537,8691,
#                                      9265,9685,9700,9715,
#                                     9716,9721,11025,11212,
#                                    11213,11417,11418,11419,
#                                   12879,12909,12912,13145,
#                                  13182,13774,13775,13784,
#                                 13827,14155,15234,15235,15892,
#                                15901,16518,16531,16533,16536) ~ FALSE,
#                TRUE ~ TRUE))%>%
filter(to_keep1) %>% select(-c( to_keep1,rowname)) %>%
#filter(to_keep2) %>% select(-c( to_keep2,rowname)) %>%
rename("dt_max_yield_mm" = "dt")
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c("site")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c("site","hobo_event_n")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(dygraphs)
library(xts)
library(highcharter)
precip <- readr::read_csv(paste0(here, "/data/W9_Streamflow_Precipitation.csv"))
ppt <- precip %>%
mutate(.after = datetime_EST,
datetime_EST2 = as.POSIXct(datetime_EST, format = "%m/%d/%Y %H:%M"))
ppt2 <- ppt %>% select(datetime_EST2, W9_Precipitation_mm)
precip_xts <- xts(ppt2, order.by=ppt$datetime_EST2)
dygraph(precip_xts) %>% dyAxis("y", valueRange = c(-1, 1)) %>%
dyRangeSelector()
all <- ppt2 %>% rename("dt" = datetime_EST2) %>%
drop_na()
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
all2 <- all %>% full_join(., hobo_events, by = join_by(dt)) %>%
group_by(dt) %>%
arrange(dt) %>%
ungroup()
all3 <- all2 %>%
mutate(Date = lubridate::ymd_hms(dt)) %>%
filter(Date >= as_datetime('2018-07-24') & Date <= as_datetime('2018-11-04'))
#for visualizing and comparing
all4 <- all3 %>%
pivot_longer(cols = contains("_mm"), names_to = "site",
values_to = "yield_mm") %>%
group_by(site, dt) %>%
arrange(dt)%>%
ungroup()%>%
select(dt, site,  yield_mm)%>%
drop_na()
ggplot(all4)+
geom_line(mapping=aes(x= dt, y= yield_mm, colour = site, group = site),
linewidth = 1) +
labs(x =  "\n Datetime", y= "Yield in mm \n", title = " Time vs. Yield \n") +
theme_bw() + facet_wrap(~site, scales = "free_y", ncol = 1)+#scales optional
theme(legend.position="none")
ggplot( all4, aes(x = dt, y = yield_mm, color = site) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.04) )+
theme_bw() + facet_wrap(~site, scales = "free_y", ncol = 1)+#scales optional
theme(legend.position="none")
#interactive plot
all_xts <- xts(all3 %>% select(dt, W9_Precipitation_mm, SFA_mm, SFB_mm,
SFC_mm, SFD_mm,TFB_mm,TFD_mm),
order.by=all3$dt)
dygraph(all_xts) %>% dyAxis("y", valueRange = c(-1, 100)) %>%
dyRangeSelector() %>% dyOptions(useDataTimezone = TRUE) %>%
dySeries("W9_Precipitation_mm", stepPlot = TRUE, fillGraph = TRUE,
color = "red")
ppt_intervals <-readxl::read_excel(paste0(here, "/data/hobo_ppt_interval_file.xlsx"))
tz(ppt_intervals$Start_dt_EST) #imported time zone is UTC
ppt_intervals2 <- ppt_intervals %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
class(ppt_intervals2$datetime_interval_EST)
tz(ppt_intervals2$datetime_interval_EST) #timezone of interval gives an error
tz(ppt_intervals2$Start_dt_EST) #timezone of start is EST
#To check the interval is in EST, we can pull out the start
start <- int_start( ppt_intervals2$datetime_interval_EST[1])
class(start)
tz(start)
#create an empty dataframe with same headers
ppt_events <- slice(ppt_intervals2, 0)
for (i in 1:length(ppt_intervals2$Event)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% ppt_intervals2$datetime_interval_EST[i]) %>%
mutate(Event = ppt_intervals2$Event[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the hourly time series record is filtered with event numbers
centroid<-ppt_events %>%
group_by(Event) %>%
summarise(meanX=mean(datetime_EST2), meanY=mean(W9_Precipitation_mm))
#pivot data long for facetwrap
ppt_events2 <- ppt_events %>%
pivot_longer(cols = contains("_mm"), names_to = "site",
values_to = "yield_mm") %>%
group_by(site, Event) %>%
arrange(datetime_EST2) %>%
ungroup() %>%
select(datetime_EST2, site, Event, yield_mm) %>%
drop_na()
#Plot ppt
theme_set(theme_bw())
ggplot(ppt_events2 %>% filter(str_detect(site, "W9"))) +
geom_line(mapping=aes(x=datetime_EST2, y= yield_mm, color = site))+
facet_wrap(~Event, scales = "free")
ggplot( ppt_events2 , aes(x = datetime_EST2, y = yield_mm, color = site) ) +
geom_smooth(se = FALSE, method = "loess", span = 0.5)+
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.04) )+
theme_bw() + facet_wrap(~Event, scales = "free")
#Calculate event statistics
ppt_event_summary <- ppt_events2 %>%
group_by(Event,site) %>%
dplyr::summarise(max_yld_mm = max(yield_mm, na.rm=T))
#Join the max rate with the time series to access the time of max for each event
ppt_events3 <- inner_join(ppt_events2, ppt_event_summary,
by = c("site", "Event")) %>%
rownames_to_column()
#manually keep the max yield rows and remove the duplicates
ppt_events4 <- ppt_events3 %>%
mutate(to_keep1 = case_when(yield_mm < max_yld_mm ~ FALSE,
TRUE ~ TRUE )) %>%
mutate(to_keep2 = case_when (rowname %in% c(119) ~ FALSE, #two peaks (equal)
TRUE ~ TRUE))%>%
filter(to_keep1) %>% select(-c( to_keep1)) %>%
filter(to_keep2) %>% select(-c( to_keep2,rowname)) %>%
rename("dt_max_yield_mm" = "datetime_EST2")
ppt_events5 <- ppt_events2 %>%
left_join(., ppt_events4 %>% select(1:3),
by = c("site", "Event")) %>%
group_by(site, Event) %>%
mutate(limb = case_when(datetime_EST2 < dt_max_yield_mm ~ "rising",
datetime_EST2 > dt_max_yield_mm ~ "falling",
datetime_EST2== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
View(hobo_events5)
ggplot(ppt_events5) +
geom_line(mapping=aes(x=datetime_EST2, y= yield_mm,  color = limb))+
facet_wrap(~Event, scales = "free")
ggplot( ppt_events5 , aes(x = datetime_EST2, y = yield_mm, color = limb) ) +
geom_smooth(se = FALSE, method = "loess", span = 5) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.04) )+
theme_bw() + facet_wrap(~Event, scales = "free")
assign("last.warning", NULL, envir = baseenv())
ppt_events6 <-inner_join(ppt_events4, centroid,
by = c("Event")) %>%
mutate(time_lag = lubridate::interval(start = ppt_events4$dt_max_yield_mm,
end = centroid$meanX,
tz = "EST"),
time_lag_duration = dseconds(time_lag))%>%
select(Event, dt_max_yield_mm,meanX,time_lag,time_lag_duration) %>%
rename("centroid_time" = "meanX")
View(ppt_events4)
View(ppt_events2)
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(dygraphs)
library(xts)
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
hobo_events2 <- hobo_events%>%
pivot_longer(cols = contains("_mm"), names_to = "site",
values_to = "yield_mm")%>%
group_by(site, dt) %>%
arrange(dt)%>%
ungroup()%>%
select(dt, site,  yield_mm, hobo_event_n)%>%
drop_na()
#Calculate event statistics
hobo_max <- hobo_events2 %>%
group_by(site, hobo_event_n) %>%
arrange(dt)%>%
dplyr::summarise(max_yld_mm = max(yield_mm, na.rm=T))
#Join the max rate with the time series to access the time of max for each event
hobo_events3 <- inner_join(hobo_max, hobo_events2,
by = c("site", "hobo_event_n")) %>%
rownames_to_column()
#manually keep the max yield rows and remove the duplicates
hobo_events4 <- hobo_events3 %>%
mutate(to_keep1 = case_when(yield_mm < max_yld_mm ~ FALSE,
TRUE ~ TRUE )) %>%
#mutate(to_keep2 = case_when (rowname %in% c(51,55,220,234,267,
#                                           1848,1859,1907,2746,
#                                         2990,4203,4207,4210,
#                                         5408,5574,5672,5674,
#                                        5816,5904,7423,7679,
#                                       7981,8536,8537,8691,
#                                      9265,9685,9700,9715,
#                                     9716,9721,11025,11212,
#                                    11213,11417,11418,11419,
#                                   12879,12909,12912,13145,
#                                  13182,13774,13775,13784,
#                                 13827,14155,15234,15235,15892,
#                                15901,16518,16531,16533,16536) ~ FALSE,
#                TRUE ~ TRUE))%>%
filter(to_keep1) %>% select(-c( to_keep1,rowname)) %>%
#filter(to_keep2) %>% select(-c( to_keep2,rowname)) %>%
rename("dt_max_yield_mm" = "dt")
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4 %>% select(1:3),
by = c("site", "Event")) %>%
group_by(site, Event) %>%
mutate(limb = case_when(datetime_EST2 < dt_max_yield_mm ~ "rising",
datetime_EST2 > dt_max_yield_mm ~ "falling",
datetime_EST2== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
View(hobo_events2)
View(hobo_events4)
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4 %>% select(1:5),
by = c("site", "hobo_event_n")) %>%
group_by(site, Event) %>%
mutate(limb = case_when(datetime_EST2 < dt_max_yield_mm ~ "rising",
datetime_EST2 > dt_max_yield_mm ~ "falling",
datetime_EST2== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4 %>% select(1:5),
by = c("site", "hobo_event_n")) %>%
group_by(site, Event) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c("site", "hobo_event_n")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c( "hobo_event_n")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
View(hobo_events2)
View(hobo_events5)
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(dygraphs)
library(xts)
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
hobo_events2 <- hobo_events%>%
pivot_longer(cols = contains("_mm"), names_to = "site",
values_to = "yield_mm")%>%
group_by(site, dt) %>%
arrange(dt)%>%
ungroup()%>%
select(dt, site,  yield_mm, hobo_event_n)%>%
drop_na()
#Calculate event statistics
hobo_max <- hobo_events2 %>%
group_by(site, hobo_event_n) %>%
arrange(dt)%>%
dplyr::summarise(max_yld_mm = max(yield_mm, na.rm=T))
#Join the max rate with the time series to access the time of max for each event
hobo_events3 <- inner_join(hobo_max, hobo_events2,
by = c("site", "hobo_event_n")) %>%
rownames_to_column()
#manually keep the max yield rows and remove the duplicates
hobo_events4 <- hobo_events3 %>%
mutate(to_keep1 = case_when(yield_mm < max_yld_mm ~ FALSE,
TRUE ~ TRUE )) %>%
#mutate(to_keep2 = case_when (rowname %in% c(51,55,220,234,267,
#                                           1848,1859,1907,2746,
#                                         2990,4203,4207,4210,
#                                         5408,5574,5672,5674,
#                                        5816,5904,7423,7679,
#                                       7981,8536,8537,8691,
#                                      9265,9685,9700,9715,
#                                     9716,9721,11025,11212,
#                                    11213,11417,11418,11419,
#                                   12879,12909,12912,13145,
#                                  13182,13774,13775,13784,
#                                 13827,14155,15234,15235,15892,
#                                15901,16518,16531,16533,16536) ~ FALSE,
#                TRUE ~ TRUE))%>%
filter(to_keep1) %>% select(-c( to_keep1,rowname)) %>%
#filter(to_keep2) %>% select(-c( to_keep2,rowname)) %>%
rename("dt_max_yield_mm" = "dt")
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c("site", "hobo_event_n")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak")) %>%
select(-dt_max_yield_mm)
View(hobo_events5)
hobo_events6 <- hobo_events5%>%
filter(limb == "falling") %>%
group_by(hobo_event_n,site)%>%
mutate(time =  seconds((dt - dt_max_yield_mm)*60))
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c("site", "hobo_event_n")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c("site", "hobo_event_n")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak"))
View(hobo_events5)
View(hobo_events5)
hobo_events6 <- hobo_events5%>%
filter(limb == "falling") %>%
group_by(hobo_event_n,site)%>%
mutate(time =  seconds((dt - dt_max_yield_mm)*60))
View(hobo_events5)
#manually keep the max yield rows and remove the duplicates
hobo_events4 <- hobo_events3 %>%
mutate(to_keep1 = case_when(yield_mm < max_yld_mm ~ FALSE,
TRUE ~ TRUE )) %>%
#mutate(to_keep2 = case_when (rowname %in% c(51,55,220,234,267,
#                                           1848,1859,1907,2746,
#                                         2990,4203,4207,4210,
#                                         5408,5574,5672,5674,
#                                        5816,5904,7423,7679,
#                                       7981,8536,8537,8691,
#                                      9265,9685,9700,9715,
#                                     9716,9721,11025,11212,
#                                    11213,11417,11418,11419,
#                                   12879,12909,12912,13145,
#                                  13182,13774,13775,13784,
#                                 13827,14155,15234,15235,15892,
#                                15901,16518,16531,16533,16536) ~ FALSE,
#                TRUE ~ TRUE))%>%
filter(to_keep1) %>% select(-c( to_keep1,rowname)) %>%
#filter(to_keep2) %>% select(-c( to_keep2,rowname)) %>%
rename("dt_max_yield_mm" = "dt")
hobo_events5 <- hobo_events2 %>%
left_join(., hobo_events4,
by = c("site", "hobo_event_n")) %>%
group_by(site, hobo_event_n) %>%
mutate(limb = case_when(dt < dt_max_yield_mm ~ "rising",
dt > dt_max_yield_mm ~ "falling",
dt== dt_max_yield_mm ~ "peak"))
View(hobo_events5)
hobo_events6 <- hobo_events5%>%
filter(limb == "falling") %>%
group_by(hobo_event_n,site)%>%
mutate(time =  seconds((dt - dt_max_yield_mm)*60))
View(hobo_events6)
ggplot(hobo_events5, aes(x = dt, y = yield_mm, color = site) ) +
geom_smooth(se = FALSE, method = "loess", span = 0.1) +
scale_x_continuous( breaks = seq(
2018-07-24, 2018-11-03, by = 0.01) ) +
theme_bw() + facet_wrap(~site, scales = "free_y", ncol = 1)+
theme(legend.position="none")
View(hobo_events6)
mod_lin <- hobo_events6 %>%
group_by(hobo_event_n,site) %>%
nest()
View(mod_lin)
mod_lin <- hobo_events6 %>%
group_by(hobo_event_n,site)
mod_lin <- hobo_events6 %>%
group_by(hobo_event_n,site) %>%
nest()
mod_lin <- hobo_events6 %>%
group_by(hobo_event_n,site) %>%
nest() %>%
mutate(nobs = map_dbl(hobo_events6, ~nrow(.x)))
mod_lin <- hobo_events6 %>%
group_by(hobo_event_n,site) %>%
nest() %>%
# mutate(nobs = map_dbl(hobo_events6, ~nrow(.x))) %>%
mutate(r = map_dbl(y = .x$log, x= .x$yield_mm.x),
p = map_dbl(y= .x$log, x = .x$max_yld_mm))
mod_lin <- hobo_events6 %>%
group_by(hobo_event_n,site) %>%
nest() %>%
# mutate(nobs = map_dbl(hobo_events6, ~nrow(.x))) %>%
mutate(r = map_dbl(hobo_events6, y = .x$log, x= .x$yield_mm.x),
p = map_dbl(hobo_events6, y= .x$log, x = .x$max_yld_mm))
