mutate(c = log(max_yld_mm) - log(yield_mm)) %>%
mutate(k = c/t)
View(mod_lin)
mod_lin <- hobo_events7 %>%
mutate(t = time_length(time, unit = "seconds")) %>%
mutate(c = log(max_yld_mm) - log(yield_mm)) %>%
mutate(k = c/t)
View(mod_lin)
knitr::opts_chunk$set(echo = TRUE)
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
# library(dplyr)
# library(readr)
# library(tidyr)
# library(purrr)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(ggplot2)
library(scales)
#Load import function
source(paste0(here, "/src/hobo_import.R"))
#Load a table of constants to use in calculations below
const <- readRDS(paste0(here,"/data/TF_SF_const.Rds"))
#SF-A-----
site <- "SF-A"
#get file paths
paths <- dir_ls(paste0(here, "/data/hobo/pressure_corrected/",
site, "/"))
#row bind results of import function
hobo <- map_dfr(paths, hobo_import)
#Calculate yields
hobo_2 <- hobo %>%
mutate(vol_L = depth_m*1000 * const$val[["SF_L_mm"]], #0.05 L/mm depth in bucket
vol_mm3 = vol_L * 1E+6, #1000000mm^3/L
yield_mm_hobo = vol_mm3/const$val[["SF_A_CA_mm2"]])  #water yield normalized to tree canopy area
#plot
plot(hobo_2$yield_mm_hobo ~ hobo_2$dt)
dir_create(paste0(here, "/output/hobo_imported/", site))
#save imported hobo record
saveRDS(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
write_csv(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.csv"))
rm(hobo, hobo_2, site, paths)
#SF-B-----
site <- "SF-B"
#get file paths
paths <- dir_ls(paste0(here, "/data/hobo/pressure_corrected/",
site, "/"))
#row bind results of import function
hobo <- map_dfr(paths, hobo_import)
#Calculate yields
hobo_2 <- hobo %>%
mutate(vol_L = depth_m*1000 * const$val[["SF_L_mm"]], #0.05 L/mm depth in bucket
vol_mm3 = vol_L * 1E+6, #1000000mm^3/L
yield_mm_hobo = vol_mm3/const$val[["SF_B_CA_mm2"]],#water yield normalized to tree canopy area
yield_mm_hobo_zeroed = case_when(yield_mm_hobo < 0 ~ 0.0,
TRUE ~ yield_mm_hobo))
hobo_3 <- hobo_2 %>%
mutate(dt_hr = round_date(dt, unit = "hour")) %>%
group_by(dt_hr) %>%
summarise(yield_mm_hobo_hr = sum(yield_mm_hobo_zeroed)) %>%
ungroup()
#plot
hobo_3_xts <- xts(hobo_3 %>% select(dt_hr, yield_mm_hobo_hr), order.by=hobo_3$dt_hr)
dygraph(hobo_3_xts) %>% #dyAxis("y", valueRange = c(-1, 1)) %>%
dyRangeSelector()
plot(hobo_2$yield_mm_hobo ~ hobo_2$dt)
dir_create(paste0(here, "/output/hobo_imported/", site))
#save imported hobo record
saveRDS(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
write_csv(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.csv"))
rm(hobo, hobo_2, site, paths)
#SF-C-----
site <- "SF-C"
#get file paths
paths <- dir_ls(paste0(here, "/data/hobo/pressure_corrected/",
site, "/"))
#row bind results of import function
hobo <- map_dfr(paths, hobo_import)
#Calculate yields
hobo_2 <- hobo %>%
mutate(vol_L = depth_m*1000 * const$val[["SF_L_mm"]], #0.05 L/mm depth in bucket
vol_mm3 = vol_L * 1E+6, #1000000mm^3/L
yield_mm_hobo = vol_mm3/const$val[["SF_C_CA_mm2"]])  #water yield normalized to tree canopy area
#plot
plot(hobo_2$yield_mm_hobo ~ hobo_2$dt)
dir_create(paste0(here, "/output/hobo_imported/", site))
#save imported hobo record
saveRDS(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
write_csv(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.csv"))
rm(hobo, hobo_2, site, paths)
#SF-D-----
site <- "SF-D"
#get file paths
paths <- dir_ls(paste0(here, "/data/hobo/pressure_corrected/",
site, "/"))
#row bind results of import function
hobo <- map_dfr(paths, hobo_import)
#Calculate yields
hobo_2 <- hobo %>%
mutate(vol_L = depth_m*1000 * const$val[["SF_L_mm"]], #0.05 L/mm depth in bucket
vol_mm3 = vol_L * 1E+6, #1000000mm^3/L
yield_mm_hobo = vol_mm3/const$val[["SF_D_CA_mm2"]])  #water yield normalized to tree canopy area
#plot
plot(hobo_2$yield_mm_hobo ~ hobo_2$dt)
dir_create(paste0(here, "/output/hobo_imported/", site))
#save imported hobo record
saveRDS(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
write_csv(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.csv"))
rm(hobo, hobo_2, site, paths)
#TF-B-----
site <- "TF-B"
#get file paths
paths <- dir_ls(paste0(here, "/data/hobo/pressure_corrected/",
site, "/"))
#row bind results of import function
hobo <- map_dfr(paths, hobo_import)
#Calculate yields
hobo_2 <- hobo %>%
mutate(vol_L = depth_m*1000 * const$val[["TF_L_mm"]], #0.09 L/mm depth in Trash bin
vol_mm3 = vol_L * 1E+6, #1000000mm^3/L
yield_mm_hobo = vol_mm3/const$val[["TFB_D_Area_mm2"]])  #water yield normalized to tree canopy area
#plot
plot(hobo_2$yield_mm_hobo ~ hobo_2$dt)
dir_create(paste0(here, "/output/hobo_imported/", site))
#save imported hobo record
saveRDS(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
write_csv(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.csv"))
rm(hobo, hobo_2, site, paths)
#TF-D-----
site <- "TF-D"
#get file paths
paths <- dir_ls(paste0(here, "/data/hobo/pressure_corrected/",
site, "/"))
#row bind results of import function
hobo <- map_dfr(paths, hobo_import)
#Calculate yields
hobo_2 <- hobo %>%
mutate(vol_L = depth_m*1000 * const$val[["TF_L_mm"]], #0.09 L/mm depth in Trash bin
vol_mm3 = vol_L * 1E+6, #1000000mm^3/L
yield_mm_hobo = vol_mm3/const$val[["TFB_D_Area_mm2"]])  #water yield normalized to tree canopy area
#plot
plot(hobo_2$yield_mm_hobo ~ hobo_2$dt)
dir_create(paste0(here, "/output/hobo_imported/", site))
#save imported hobo record
saveRDS(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
write_csv(hobo_2, paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.csv"))
rm(hobo, hobo_2, site, paths)
site <- "SF-A"
hobo <- readRDS(paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
hobo2 <- hobo %>% select(dt, yield_mm_hobo)
hobo_xts <- xts(hobo2, order.by=hobo$dt)
dygraph(hobo_xts) %>% dyAxis("y", valueRange = c(-1, 1)) %>%
dyRangeSelector()
hobo_all <- hobo2 %>% rename("SFA_mm" = yield_mm_hobo)
site <- "SF-B"
hobo <- readRDS(paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
hobo2 <- hobo %>% select(dt, yield_mm_hobo)
hobo_xts <- xts(hobo2, order.by=hobo$dt)
dygraph(hobo_xts) %>% dyAxis("y", valueRange = c(-1, 1)) %>%
dyRangeSelector()
hobo_all <- hobo_all %>% full_join(., hobo2 %>%
rename("SFB_mm" = yield_mm_hobo),
by = "dt")
site <- "SF-C"
hobo <- readRDS(paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
hobo2 <- hobo %>% select(dt, yield_mm_hobo)
hobo_xts <- xts(hobo2, order.by=hobo$dt)
dygraph(hobo_xts) %>% dyAxis("y", valueRange = c(-1, 1)) %>%
dyRangeSelector()
hobo_all <- hobo_all %>% full_join(., hobo2 %>%
rename("SFC_mm" = yield_mm_hobo),
by = "dt")
site <- "SF-D"
hobo <- readRDS(paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
hobo2 <- hobo %>% select(dt, yield_mm_hobo)
hobo_xts <- xts(hobo2, order.by=hobo$dt)
dygraph(hobo_xts) %>% dyAxis("y", valueRange = c(-1, 1)) %>%
dyRangeSelector()
hobo_all <- hobo_all %>% full_join(., hobo2 %>%
rename("SFD_mm" = yield_mm_hobo),
by = "dt")
site <- "TF-B"
hobo <- readRDS(paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
hobo2 <- hobo %>% select(dt, yield_mm_hobo)
hobo_xts <- xts(hobo2, order.by=hobo$dt)
dygraph(hobo_xts) %>% dyAxis("y", valueRange = c(-1, 1)) %>%
dyRangeSelector()
hobo_all <- hobo_all %>% full_join(., hobo2 %>%
rename("TFB_mm" = yield_mm_hobo),
by = "dt")
site <- "TF-D"
hobo <- readRDS(paste0(here, "/output/hobo_imported/",
site, "/", site, "_imported.Rds"))
hobo2 <- hobo %>% select(dt, yield_mm_hobo)
hobo_xts <- xts(hobo2, order.by=hobo$dt)
dygraph(hobo_xts) %>% dyAxis("y", valueRange = c(-1, 1)) %>%
dyRangeSelector()
hobo_all <- hobo_all %>% full_join(., hobo2 %>%
rename("TFD_mm" = yield_mm_hobo),
by = "dt")
#interactive plot of throughfall
hobo_all_xts <- xts(hobo_all %>% select(dt, TFB_mm, TFD_mm),
order.by=hobo_all$dt)
dygraph(hobo_all_xts) %>% dyAxis("y", valueRange = c(-1, 100)) %>%
dyRangeSelector() %>% dyOptions(useDataTimezone = TRUE)
#interactive plot of stemflow
hobo_all2_xts <- xts(hobo_all %>% select(dt, SFA_mm, SFB_mm, SFC_mm, SFD_mm),
order.by=hobo_all$dt)
dygraph(hobo_all2_xts) %>% dyAxis("y", valueRange = c(-0.1, 1)) %>%
dyRangeSelector() %>% dyOptions(useDataTimezone = TRUE)
saveRDS(hobo_all, paste0(here,"/output/hobo_compiled_wide.Rds"))
#Import stemflow and throughfall time intervals
r2_events <- readxl::read_excel(paste0(here, "/data/hobo/hobo_events.xlsx"))
tz(r2_events$start_time_EST) #imported time zone is UTC
sapply(r2_events, class)
r2_events2 <- r2_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = end_time_EST,
datetime_interval_EST = lubridate::interval(start = start_time_EST,
end = end_time_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
class(r2_events2$datetime_interval_EST)
tz(r2_events2$datetime_interval_EST) #timezone of interval gives an error
tz(r2_events2$start_time_EST) #timezone of start is EST
view(r2_events2)
#To check the interval is in EST, we can pull out the start
start <- int_start( r2_events2$datetime_interval_EST[1])
class(start)
tz(start)
intervals <- r2_events2
#save
saveRDS(intervals, paste0(here, "/output/hobo_intervals.rds"))
rm(r2_events, r2_events2)
hobo_all <- readRDS(paste0(here,"/output/hobo_compiled_wide.Rds"))
# hobo_rec <- hobo_all %>%
#   mutate(.after = TFD_mm, #indicates where the new column is placed
#          dt2 = as.POSIXct(dt, format = "%m/%d/%Y %H:%M")) %>%
#   filter(minute(dt2) == 0) %>% #remove subhourly timestamps
#   arrange(dt2) #Order from earliest to latest timestamp
#create an empty dataframe with same headers
hobo_events <- slice(hobo_all, 0)
i=1
rm(i)
for (i in 1:length(intervals$hobo_event_n)) {
interval <- hobo_all %>%
filter(dt %within% intervals$datetime_interval_EST[i]) %>%
mutate(hobo_event_n = intervals$hobo_event_n[i])
hobo_events <- bind_rows(hobo_events, interval)
}
#Check timezone
tz(hobo_events$dt)
#Now the hourly time series record is filtered with event numbers
saveRDS(hobo_events, paste0(here, "/output/hobo_events.Rds"))
#load time series of just events
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
#convert water level yield (mm) to rates for all sites
#pivot data long first
hobo_events2 <- hobo_events %>%
pivot_longer(cols = contains("_mm"), names_to = "site",
values_to = "yield_mm") %>%
group_by(site, hobo_event_n) %>%
arrange(dt) %>%
mutate(rate_mm_5min = yield_mm - lag(yield_mm, order_by = dt),
rate_mm_5min_clean = case_when(rate_mm_5min < 0 |
is.na(rate_mm_5min) ~ 0,
TRUE ~ rate_mm_5min)) %>%
ungroup() %>%
select(dt, site, hobo_event_n, yield_mm, rate_mm_5min_clean) %>%
rename("cumyield_mm" = "yield_mm",
"rate_mm_5min" = "rate_mm_5min_clean")
#Plot throughfall----
theme_set(theme_bw())
ggplot(hobo_events2 %>% filter(str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= cumyield_mm, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
ggplot(hobo_events2 %>% filter(str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= rate_mm_5min, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
#Plot stemflow----
ggplot(hobo_events2 %>% filter(!str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= cumyield_mm, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
gg1 <-ggplot(hobo_events2 %>% filter(!str_detect(site, "TF"))) +
# geom_line(mapping=aes(x=dt, y= rate_mm_5min, color = site))+
geom_smooth(mapping=aes(x=dt, y= rate_mm_5min, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
ggplot_build(gg1)$data[[2]][,c("x","y")]
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(dygraphs)
library(xts)
library(highcharter)
precip <- readr::read_csv(paste0(here, "/data/W9_Streamflow_Precipitation.csv"))
ppt <- precip %>%
mutate(.after = datetime_EST,
datetime_EST2 = as.POSIXct(datetime_EST, format = "%m/%d/%Y %H:%M"))
ppt2 <- ppt %>% select(datetime_EST2, W9_Precipitation_mm)
precip_xts <- xts(ppt2, order.by=ppt$datetime_EST2)
dygraph(precip_xts) %>% dyAxis("y", valueRange = c(-1, 1)) %>%
dyRangeSelector()
all <- ppt2 %>% rename("dt" = datetime_EST2) %>%
drop_na()
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
all2 <- all %>% full_join(., hobo_events, by = join_by(dt)) %>%
group_by(dt) %>%
arrange(dt) %>%
ungroup()
all3 <- all2 %>%
mutate(Date = lubridate::ymd_hms(dt)) %>%
filter(Date >= as_datetime('2018-07-24') & Date <= as_datetime('2018-11-04'))
View(all3)
View(all3)
ggplot( all3, aes(x = dt, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .05) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw()
ggplot( all3, aes(x = dt, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw()
ggplot( all3, aes(x = dt, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
ggplot( all3, aes(x = dt, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.05) )+
theme_bw() +
theme(legend.position="none")
ggplot( all3, aes(x = dt, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(dygraphs)
library(xts)
library(highcharter)
precip <- readr::read_csv(paste0(here, "/data/W9_Streamflow_Precipitation.csv"))
ppt <- precip %>%
mutate(.after = datetime_EST,
datetime_EST2 = as.POSIXct(datetime_EST, format = "%m/%d/%Y %H:%M"))
ppt2 <- ppt %>% select(datetime_EST2, W9_Precipitation_mm)
precip_xts <- xts(ppt2, order.by=ppt$datetime_EST2)
dygraph(precip_xts) %>% dyAxis("y", valueRange = c(-1, 1)) %>%
dyRangeSelector()
all <- ppt2 %>% rename("dt" = datetime_EST2) %>%
drop_na()
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
all2 <- all %>% full_join(., hobo_events, by = join_by(dt)) %>%
group_by(dt) %>%
arrange(dt) %>%
ungroup()
all3 <- all2 %>%
mutate(Date = lubridate::ymd_hms(dt)) %>%
filter(Date >= as_datetime('2018-07-24') & Date <= as_datetime('2018-11-04'))
gg_SFA <- ggplot( all3, aes(x = dt, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
SFA_smooth <- ggplot_build(gg1)$data[[1]][,c("x","y")]
gg_SFA <- ggplot( all3, aes(x = dt, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
SFA_smooth <- ggplot_build(gg_SFA)$data[[1]][,c("x","y")]
View(gg_SFA)
gg_SFA <- ggplot( all3, aes(x = dt, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
ggplot_build(gg_SFA)$data[[1]][,c("x","y")]
View(SFA_smooth)
View(all2)
View(all3)
gg_SFA <- ggplot( all3, aes(x = Date, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
SFA_smooth  <-  ggplot_build(gg_SFA)$data[[1]][,c("x","y")]
View(gg_SFA)
View(SFA_smooth)
gg_SFA <- ggplot( all3, aes(x = as.numeric(Date), y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
SFA_smooth  <-  ggplot_build(gg_SFA)$data[[1]][,c("x","y")]
View(SFA_smooth)
all3 <- all2 %>%
mutate(Date = as.numeric(lubridate::ymd_hms(dt))) %>%
filter(Date >= as_datetime('2018-07-24') & Date <= as_datetime('2018-11-04'))
View(all3)
all3 <- all2 %>%
mutate(Date = as.character(lubridate::ymd_hms(dt))) %>%
filter(Date >= as_datetime('2018-07-24') & Date <= as_datetime('2018-11-04'))
View(all3)
all3 <- all2 %>%
mutate(Date = as.numeric(as.character(lubridate::ymd_hms(dt)))) %>%
filter(Date >= as_datetime('2018-07-24') & Date <= as_datetime('2018-11-04'))
View(all3)
all3 <- all2 %>%
mutate(Date = as.character(lubridate::ymd_hms(dt))) %>%
filter(Date >= as_datetime('2018-07-24') & Date <= as_datetime('2018-11-04'))
gg_SFA <- ggplot( all3, aes(x = as.numeric(Date), y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
SFA_smooth  <-  ggplot_build(gg_SFA)$data[[1]][,c("x","y")]
gg_SFA <- ggplot( all3, aes(x = Date, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
SFA_smooth  <-  ggplot_build(gg_SFA)$data[[1]][,c("x","y")]
gg_SFA <- ggplot( all3, aes(x = Date, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
ggplot( all3, aes(x = Date, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
all3 <- all2 %>%
mutate(Date = as.character(lubridate::ymd_hms(dt))) %>%
filter(Date >= as_datetime('2018-07-24') & Date <= as_datetime('2018-11-04'))%>%
mutate(Date2 <- as.numeric(Date))
View(all3)
all3 <- all2 %>%
mutate(Date = as.numeric(as.character(lubridate::ymd_hms(dt)))) %>%
filter(Date >= as_datetime('2018-07-24') & Date <= as_datetime('2018-11-04'))
View(all3)
all3 <- all2 %>%
mutate(Date = lubridate::ymd_hms(dt)) %>%
filter(Date >= as_datetime('2018-07-24') & Date <= as_datetime('2018-11-04'))
gg_SFA <- ggplot( all3, aes(x = as_datetime(Date), y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
View(gg_SFA)
SFA_smooth  <-  ggplot_build(gg_SFA)$data[[1]][,c("x","y")]
View(SFA_smooth)
SFA_smooth  <-  ggplot_build(gg_SFA)$data[[1]][,c("x","y")] %>%
mutate(Date <- as_datetime(x))
View(SFA_smooth)
gg_SFA <- ggplot( all3, aes(x = Date, y = SFA_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
SFA_smooth  <-  ggplot_build(gg_SFA)$data[[1]][,c("x","y")] %>%
mutate(Date = as_datetime(x)) %>%
select(-x)
View(SFA_smooth)
gg_SFA <- ggplot( all3, aes(x = Date, y = SFA_mm , SFB_mm) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
SFA_smooth  <-  ggplot_build(gg_SFA)$data[[1]][,c("x","y")] %>%
mutate(Date = as_datetime(x)) %>%
select(-x)
View(SFA_smooth)
gg_SFA <- ggplot( all3, aes(x = Date, y = SFA_mm ) ) +
geom_smooth(se = FALSE, method = "loess", span = .1) +
scale_x_continuous( breaks = seq(2018-07-24, 2018-11-03, by = 0.1) )+
theme_bw() +
theme(legend.position="none")
SFA_smooth  <-  ggplot_build(gg_SFA)$data[[1]][,c("x","y")] %>%
mutate(Date = as_datetime(x)) %>%
select(-x)
View(SFA_smooth)
