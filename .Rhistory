final <- ppt2 %>%
filter(datetime_EST %within% intervals[i]) %>%
mutate(Event_number = events2$Event_Number[i])
ppt_intervals <- bind_rows(ppt_intervals, final)
}
tz(ppt_intervals$datetime_EST)
ppt2$datetime_EST <- as.POSIXct(ppt2$datetime_EST, format = "%m/%d/%Y %H:%M", tz = "EST" )
ppt2 <- ppt2 %>%
mutate(Time <- hour(ppt2$datetime_EST) + minute(ppt2$datetime_EST)/60 + second(ppt2$datetime_EST)/3600)
ppt_intervals <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals)) {
final <- ppt2 %>%
filter(datetime_EST %within% intervals[i]) %>%
mutate(Event_number = events2$Event_Number[i])
ppt_intervals <- bind_rows(ppt_intervals, final)
}
tz(ppt_intervals$datetime_EST)
ppt_intervals <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(events2$datetime_interval_EST2)) {
final <- ppt2 %>%
filter(datetime_EST %within% intervals[i]) %>%
mutate(Event_number = events2$Event_Number[i])
ppt_intervals <- bind_rows(ppt_intervals, final)
}
tz(ppt_intervals$datetime_EST)
ppt_intervals <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals)) {
final <- ppt2 %>%
filter(datetime_EST %within% intervals[i]) %>%
mutate(Event_number = events2$Event_Number[i])
ppt_intervals <- bind_rows(ppt_intervals, final)
}
tz(ppt_intervals$datetime_EST)
start <- int_start(events2$datetime_interval_EST2[1])
class(start)
tz(start)
startppt <- int_start(ppt2$datetime_EST[1])
class(startppt)
tz(startppt)
start <- int_start(ppt2$datetime_EST[1])
class(start)
tz(start)
vec <- c(0, NA)
vec
ppt <- ppt[! ppt$W9_Precipitation_mm %in% vec,]
vec <- c(0, NA)
vec
ppt <- ppt[! ppt$W9_Precipitation_mm %in% vec,]
View(ppt)
ppt$datetime_EST <- as.POSIXct(ppt$datetime_EST, format = "%m/%d/%Y %H:%M", tz = "EST" )
ppt
ppt <- ppt %>%
mutate(Time <- hour(ppt2$datetime_EST) + minute(ppt2$datetime_EST)/60 + second(ppt2$datetime_EST)/3600)
filtering intervals
ppt_intervals <- slice(ppt, 0)
i=1
rm(i)
for (i in 1:length(intervals)) {
final <- ppt %>%
filter(datetime_EST %within% intervals[i]) %>%
mutate(Event_number = events2$Event_Number[i])
ppt_intervals <- bind_rows(ppt_intervals, final)
}
tz(ppt_intervals$datetime_EST)
ppt_intervals <- slice(ppt, 0)
i=1
rm(i)
for (i in 1:length(intervals)) {
final <- ppt %>%
filter(datetime_EST %within% intervals[i]) %>%
mutate(Event_number = events2$Event_Number[i])
ppt_intervals <- bind_rows(ppt_intervals, final)
}
tz(ppt_intervals$datetime_EST)
library(tidyverse) #this is a set of several packages including 'readr'
library(here)
here <- here() #create a filepath object named "here" to use later
library(lubridate) #lubridate needs to be loaded separately
events <- readr::read_csv(paste0(here, "/data/W9_Throughfall_Stemflow_Precipitation.csv"))
ppt <- readr::read_csv(paste0(here, "/data/W9_Streamflow_Precipitation.csv"))
events2 <- events %>%
mutate(.after = datetime_end_GMT, #indicates where the new column is placed
datetime_interval_EST2 = lubridate::interval(start = datetime_start_GMT,
end = datetime_end_GMT,
tz = "EST"))
class(events2$datetime_interval_EST2)
tz(events2$datetime_interval_EST2) #timezone of interval gives an error
tz(events2$datetime_start_GMT) #timezone of start is UTC/GMT
view(events2) #check the new intervals match the character intervals
#To check the interval is in EST, we can pull out the start
start <- int_start(events2$datetime_interval_EST2[1])
class(start)
tz(start)
intervals <- events2 %>%
distinct(datetime_interval_EST2, .keep_all = TRUE) %>%
select(Event_Number, datetime_interval_EST2)
ppt2 <- ppt %>%
mutate(.after = datetime_EST, #indicates where the new column is placed
datetime_EST2 = as.POSIXct(datetime_EST, format = "%m/%d/%Y %H:%M")) %>%
select(-W9_Streamflow_mm_hr)
#create an empty dataframe with same headers
ppt_events <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the time series record is filtered with event numbers
View(interval)
View(events)
View(events)
interval %>%
select(W9_Precipitation_mm, datetime_EST2) %>%
na.omit() %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
mutate(Rate <- W9_Precipitation_mm/Time)
interval %>%
select(W9_Precipitation_mm, datetime_EST2) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
View(interval)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
mutate(Rate <- W9_Precipitation_mm/Time)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
na.omit()
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, `Time <- ...`) %>%
mutate(Rate <- W9_Precipitation_mm/`Time <- ...`)
ppt_events <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the time series record is filtered with event numbers
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
na.omit()
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, `Time <- ...`, event_n) %>%
mutate(Rate <- W9_Precipitation_mm/`Time <- ...`)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
mutate(Rate <- W9_Precipitation_mm/`Time <- ...`)
na.omit()
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
na.omit()
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, `Time <- ...`, event_n) %>%
mutate(Rate <- W9_Precipitation_mm/`Time <- ...`) %>%
group_by(W9_Precipitation_mm)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, `Time <- ...`, event_n) %>%
mutate(Rate <- W9_Precipitation_mm/`Time <- ...`) %>%
group_by(W9_Precipitation_mm)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, `Time <- ...`, event_n) %>%
mutate(Rate <- W9_Precipitation_mm/`Time <- ...`)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, `Time <- ...`, event_n) %>%
mutate(Rate <- W9_Precipitation_mm/`Time <- ...`) %>%
group_by(datetime_EST2) %>%
summarise(Total_ppt <- sum(W9_Precipitation_mm), min(W9_Precipitation_mm), max(W9_Precipitation_mm) )
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, `Time <- ...`, event_n) %>%
mutate(Rate <- W9_Precipitation_mm/`Time <- ...`) %>%
group_by(`Time <- ...`) %>%
summarise(Total_ppt <- sum(W9_Precipitation_mm), min(W9_Precipitation_mm), max(W9_Precipitation_mm) )
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, `Time <- ...`, event_n) %>%
mutate(Rate <- W9_Precipitation_mm/`Time <- ...`)
Time <- hour(interval$datetime_EST2) + minute(interval$datetime_EST2)/60 + second(interval$datetime_EST2)/3600
interval <- interval %>%
Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600
#Now you should have an set of intervals to use for filtering
intervals <- events2 %>%
distinct(datetime_interval_EST2, .keep_all = TRUE) %>%
select(Event_Number, datetime_interval_EST2)
##1.2 Assign event numbers/filter ppt time series based on event intervals ----
ppt2 <- ppt %>%
mutate(.after = datetime_EST, #indicates where the new column is placed
datetime_EST2 = as.POSIXct(datetime_EST, format = "%m/%d/%Y %H:%M")) %>%
select(-W9_Streamflow_mm_hr)
#create an empty dataframe with same headers
ppt_events <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Check and correct timezone
tz(ppt_events$datetime_EST2)
interval <- interval %>%
Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600
View(interval)
interval <- interval %>%
Time <- hour(datetime) + minute(datetime)/60 + second(datetime)/3600
interval <- interval %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
Time = 1
rm(Time)
interval <- interval %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
mutate(Rate = W9_Precipitation_mm/Time) %>%
group_by(Time) %>%
summarise(Total_ppt <- sum(W9_Precipitation_mm), min(W9_Precipitation_mm), max(W9_Precipitation_mm) )
Time = 1
rm(Time)
interval <- interval %>%
mutate(Time <- hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
mutate(Rate = W9_Precipitation_mm/Time) %>%
group_by(Time) %>%
summarise(Total_ppt <- sum(W9_Precipitation_mm), min(W9_Precipitation_mm), max(W9_Precipitation_mm) )
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
mutate(Rate = W9_Precipitation_mm/Time) %>%
group_by(Time) %>%
summarise(Total_ppt <- sum(W9_Precipitation_mm), min(W9_Precipitation_mm), max(W9_Precipitation_mm) )
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
mutate(Rate = W9_Precipitation_mm/Time) %>%
group_by(datetime_EST2) %>%
summarise(Total_ppt = sum(W9_Precipitation_mm), min_ppt = min(W9_Precipitation_mm), max_ppt = max(W9_Precipitation_mm) )
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
mutate(Rate = W9_Precipitation_mm/Time) %>%
group_by(Time) %>%
summarise(Total_ppt = sum(W9_Precipitation_mm), min_ppt = min(W9_Precipitation_mm), max_ppt = max(W9_Precipitation_mm) )
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
mutate(Rate = W9_Precipitation_mm/Time)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the time series record is filtered with event numbers
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
mutate(Rate = W9_Precipitation_mm/Time) %>%
group_by(Time) %>%
summarise(Total_ppt = sum(W9_Precipitation_mm), min_ppt = min(W9_Precipitation_mm), max_ppt = max(W9_Precipitation_mm) )
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
mutate(Rate = W9_Precipitation_mm/Time)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n, Time) %>%
group_by(Time) %>%
summarise(Total_ppt = sum(W9_Precipitation_mm), min_ppt = min(W9_Precipitation_mm), max_ppt = max(W9_Precipitation_mm) )
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600) %>%
mutate(Rate = W9_Precipitation_mm/Time)
interval <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(W9_Precipitation_mm = W9_Precipitation_mm, Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval1 <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate0(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval1 <- interval %>%
select(W9_Precipitation_mm, datetime_EST2, event_n) %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval1 <- interval %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
#create an empty dataframe with same headers
ppt_events <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the time series record is filtered with event numbers
interval <- interval %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
#create an empty dataframe with same headers
ppt_events <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the time series record is filtered with event number
interval1 <- interval %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
View(interval1)
interval1 <- interval1 %>%
mutate(Rate = W9_Precipitation_mm/Time)
ppt_events <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the time series record is filtered with event numbers
interval <- interval %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
interval <- interval %>%
mutate(Rate = W9_Precipitation_mm/Time)
View(ppt_events)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the time series record is filtered with event numbers
ppt_events <- ppt_events %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
ppt_events <- ppt_events %>%
mutate(Rate = W9_Precipitation_mm/Time)
ppt_events <- ppt_events %>%
select(datetime_EST2, W9_Precipitation_mm, Time, Rate)
group_by(Time) %>%
summarise(Total_ppt = sum(W9_Precipitation_mm),
min_ppt = min(W9_Precipitation_mm), max_ppt = max(W9_Precipitation_mm),
min_rate = min(Rate) )
ppt_events <- ppt_events %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
ppt_events <- ppt_events %>%
mutate(Rate = W9_Precipitation_mm/Time)
ppt_events <- ppt_events %>%
group_by(Time)
ppt_events <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the time series record is filtered with event numbers
ppt_events <- ppt_events %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
ppt_events <- ppt_events %>%
mutate(Rate = W9_Precipitation_mm/Time)
ppt_events <- ppt_events %>%
group_by(Time)
ppt_events <- ppt_events   %>%
summarise(Total_ppt = sum(W9_Precipitation_mm),
min_ppt = min(W9_Precipitation_mm), max_ppt = max(W9_Precipitation_mm),
min_rate = min(Rate) )
ppt_events <- ppt_events %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
ppt_events <- ppt_events %>%
mutate(Rate = W9_Precipitation_mm/Time)
ppt_events <- ppt_events %>%
group_by(Time)
ppt_events <- ppt_events   %>%
summarise(Total_ppt = sum(W9_Precipitation_mm),
min_ppt = min(W9_Precipitation_mm), max_ppt = max(Rate),
min_rate = min(Rate) )
ppt_events <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the time series record is filtered with event numbers
ppt_events <- ppt_events %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
ppt_events <- ppt_events %>%
mutate(Rate = W9_Precipitation_mm/Time)
ppt_events <- ppt_events %>%
group_by(Time)
ppt_events <- ppt_events   %>%
summarise(Total_ppt = sum(W9_Precipitation_mm),
min_ppt = min(W9_Precipitation_mm), max_ppt = max(Rate),
min_rate = min(Rate) )
ppt_events <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(event_n = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the time series record is filtered with event numbers
ppt_events <- ppt_events %>%
mutate(Time = hour(datetime_EST2) + minute(datetime_EST2)/60 + second(datetime_EST2)/3600)
ppt_events <- ppt_events %>%
mutate(Rate = W9_Precipitation_mm/Time)
ppt_events <- ppt_events %>%
group_by(Time)
ppt_events <- ppt_events   %>%
summarise(Total_ppt = sum(W9_Precipitation_mm),
min_ppt = min(W9_Precipitation_mm), max_ppt = max(W9_Precipitation_mm),
min_rate = min(Rate), max_rate = max(Rate) )
