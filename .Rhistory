data = SF_rec %>%filter(Event == 9)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-11-03 08:30:00 EST"),
as.POSIXct("2018-11-04 08:30:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-11-03 08:30:00 EST"),
as.POSIXct("2018-11-04 08:30:00 EST")
)
)
t3 <- ggplot()+
geom_point(aes(x=dt, y = Ev_yld_norm),
data = TF_event%>%filter(Event == 9))+
geom_point(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = TF_rec %>%filter(Event == 9)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-11-03 08:30:00 EST"),
as.POSIXct("2018-11-04 08:30:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-11-03 08:30:00 EST"),
as.POSIXct("2018-11-04 08:30:00 EST")
)
)
t <- t1+ t2 +t3 + plot_layout(ncol=1)
ggsave(filename = "Fig_2_ev_9.png", plot = t, path = paste0(here, "/output/figs/"),
device = "png")
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(scales)
library(patchwork)
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
#event_norm
event_norm <- hobo_events%>%
group_by(hobo_event_n)%>%
mutate(sec = seconds(dt) - min(seconds(dt)),
sec_norm = sec/max(sec),
yld_mm_norm1 = yield_mm - min(yield_mm),
yld_mm_norm2 = yld_mm_norm1/max(yld_mm_norm1),
power_yield = 10^yld_mm_norm2)%>%
mutate(site = case_when(site == "SFA_mm" ~ "SF-A",
site == "SFB_mm" ~ "SF-B",
site == "SFC_mm" ~ "SF-C",
site == "SFD_mm" ~ "SF-D",
site == "TFB_mm" ~ "TF-B",
site == "TFD_mm" ~ "TF-D"))%>%
ungroup()%>%
distinct(across(power_yield), .keep_all = TRUE)%>%
drop_na()
#linear models for hobo events
nested_events <- event_norm %>%
drop_na()%>%
select(-site)%>%
group_by(hobo_event_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2) %>%
unnest(data) %>%
ungroup()%>%
distinct(across(hobo_event_n), .keep_all = TRUE)
hobo_rec_events <- read_csv(paste0(here, "/data/rec_values.csv"))%>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::with_tz(., tzone='EST')))
#rec_norm
rec_norm <- hobo_rec_events%>%
group_by(recession_n)%>%
mutate(sec = seconds(dt) - min(seconds(dt)),
sec_norm = sec/max(sec),
yld_mm_norm1 = yield_mm - min(yield_mm),
yld_mm_norm2 = yld_mm_norm1/max(yld_mm_norm1),
power_yield = 10^yld_mm_norm2)%>%
mutate(site = recession_n)%>%
mutate(site = case_when(str_detect(site, "SFA") ~ "SM",
str_detect(site, "SFB") ~ "YB",
str_detect(site, "SFC") ~ "SM",
str_detect(site, "SFD") ~ "YB",
str_detect(site, "TFB") ~ "TF",
str_detect(site, "TFD") ~ "TF"))%>%
# select(-TF, -SM, -YB)%>%
ungroup()%>%
distinct(across(power_yield), .keep_all = TRUE)%>%
drop_na()
#linear models for recession n
nested_rec_events <- rec_norm %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2) %>%
unnest(data) %>%
ungroup()%>%
distinct(across(recession_n), .keep_all = TRUE)
#Pred
model_rec_events <- rec_norm %>%
dplyr::group_by(recession_n)%>%
nest() %>%
mutate(m1 = purrr::map(.x = data, .f = ~ lm(power_yield~ sec_norm, data = .)),
glance = map(.x = m1, .f = ~broom::glance(.x)),
preds = map(m1, broom::augment),
r = map_dbl(.x = data, .f = ~cor(.x$power_yield, .x$sec_norm, use="complete.obs")),
RMSE = map_dbl(preds, .f = ~sqrt(mean(.x$.resid^2)))) %>%
# unnest(preds)%>%
unnest(preds)%>%
ungroup()
rate_convertion <- model_rec_events %>%
# select(-yield_mm, yld_mm_norm1, -yld_mm_norm2, -sec)%>%
mutate(hobo_event_n = recession_n)%>%
mutate(hobo_event_n = case_when(str_detect(hobo_event_n, "E1") ~ "1",
str_detect(hobo_event_n, "E2") ~ "2",
str_detect(hobo_event_n, "E3") ~ "3",
str_detect(hobo_event_n, "E4") ~ "4",
str_detect(hobo_event_n, "E5") ~ "5",
str_detect(hobo_event_n, "E6") ~ "6",
str_detect(hobo_event_n, "E7") ~ "7",
str_detect(hobo_event_n, "E8") ~ "8",
str_detect(hobo_event_n, "E9") ~ "9")) %>%
mutate(site = recession_n)%>%
mutate(site = case_when(str_detect(site, "SFA") ~ "SM",
str_detect(site, "SFB") ~ "YB",
str_detect(site, "SFC") ~ "SM",
str_detect(site, "SFD") ~ "YB",
str_detect(site, "TFB") ~ "TF",
str_detect(site, "TFD") ~ "TF")) %>%
dplyr::group_by(recession_n) %>%
mutate(rate_yld = .fitted - lag(.fitted)) %>%
ungroup()
ggplot(rate_convertion) +
geom_col(mapping = aes(x=sec_norm, y=rate_yld,colour = site))+
facet_wrap(~ hobo_event_n, scales = "free")
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
# library(ggplot2)
library(scales)
library(patchwork)
library(broom)
rec_table_1 <- readr::read_csv(paste0(here, "/output/table1.csv"))%>%
rename("hobo_event_n" = "Event")
rec_table_2 <- readr::read_csv(paste0(here, "/output/table2.csv"))
event_table <- readr::read_csv(paste0(here, "/data/event_model.csv"))
merged_event_table <- full_join(rec_table_1, event_table,
by = c( "hobo_event_n"))%>%
select(hobo_event_n, api_30d, event_intensity, m)
merged_rec_table <- full_join(rec_table_1, rec_table_2,
by = c( "hobo_event_n"))%>%
mutate(site = recession_n)%>%
mutate(site = case_when(str_detect(site, "SFA") ~ "SM",
str_detect(site, "SFB") ~ "YB",
str_detect(site, "SFC") ~ "SM",
str_detect(site, "SFD") ~ "YB",
str_detect(site, "TFB") ~ "TF",
str_detect(site, "TFD") ~ "TF"))%>%
select(hobo_event_n, api_30d, event_intensity, m, Delta_T_duration, recession_n, site)
p1 = ggplot(merged_event_table) +
geom_point(mapping = aes(x=api_30d, y=m,colour = "api"))
p2 = ggplot(merged_event_table) +
geom_point(mapping = aes(event_intensity, y=m,colour = "event_intensity"))
p3 = ggplot(merged_rec_table) +
geom_point(mapping = aes(Delta_T_duration, y=m,colour = site))+
geom_boxplot(mapping = aes(x=site, y=m))+
facet_wrap(~ site)
p1 /p2
(p1 + p2) / p3
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(scales)
library(patchwork)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))%>%
select(Event, datetime_EST2, W9_Precipitation_mm)%>%
drop_na()
ppt_interval <- read_csv(paste0(here, "/data/ppt_interval_fomatted.csv"))
tz(ppt_interval$Start_dt_EST) #imported time zone is UTC
ppt_intervals2 <- ppt_interval %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
class(ppt_intervals2$datetime_interval_EST)
tz(ppt_intervals2$datetime_interval_EST) #timezone of interval gives an error
tz(ppt_intervals2$Start_dt_EST) #timezone of start is EST
#To check the interval is in EST, we can pull out the start
start <- int_start( ppt_intervals2$datetime_interval_EST[1])
class(start)
tz(start)
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))%>%
rename("event_yield" = "yield_mm", )
hobo_events2 <- hobo_events %>%
mutate(site = case_when(site == "SFA_mm" ~ "SF-A",
site == "SFB_mm" ~ "SF-B",
site == "SFC_mm" ~ "SF-C",
site == "SFD_mm" ~ "SF-D",
site == "TFB_mm" ~ "TF-B",
site == "TFD_mm" ~ "TF-D"))
hobo_events_rec <-read_csv(paste0(here, "/data/rec_values.csv"))%>%
rename("recession_yield" = "yield_mm")
hobo_merged <- full_join(hobo_events2 , hobo_events_rec,
by = c(  "dt","hobo_event_n", "site"))
#Filtering hobo events from ppt intervals
hobo_from_ppt_events <- slice(ppt_interval, 0)
for (i in 1:length(ppt_intervals2$Event)) {
interval <- hobo_merged %>%
filter(dt %within% ppt_intervals2$datetime_interval_EST[i]) %>%
mutate(Event = ppt_intervals2$Event[i])
hobo_from_ppt_events <- bind_rows(hobo_from_ppt_events, interval)
}
hobo_event_norm <- hobo_from_ppt_events%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,
-recession_yield, -Notes)%>%
group_by(hobo_event_n)%>%
mutate(Ev_yld_norm = event_yield + abs(min(event_yield)))%>%
# distinct(Ev_yld_norm, .keep_all = TRUE)%>%
ungroup()
hobo_rec_norm <- hobo_event_norm %>%
drop_na()
#For hobo_n event
SF_event <- hobo_event_norm %>%
filter(!str_detect(site, "TF"))%>%
select(Ev_yld_norm,site, dt, Event, recession_n)%>%
mutate(site = case_when(str_detect(site, "SF-A") ~ "SM",
str_detect(site, "SF-B") ~ "YB",
str_detect(site, "SF-C") ~ "SM",
str_detect(site, "SF-D") ~ "YB"))
#For rec_n event
SF_rec <- hobo_rec_norm %>%
filter(!str_detect(site, "TF"))%>%
select(Ev_yld_norm,site, dt, Event, recession_n)%>%
mutate(site = case_when(str_detect(site, "SF-A") ~ "SM",
str_detect(site, "SF-B") ~ "YB",
str_detect(site, "SF-C") ~ "SM",
str_detect(site, "SF-D") ~ "YB"))
ppt_events_r7_2 <- ppt_events_r7%>%
rename("dt" ="datetime_EST2")
#For hobo_n event
TF_event <- hobo_event_norm %>%
filter(str_detect(site, "TF"))
#For hobo_n event
TF_rec <- hobo_rec_norm %>%
filter(str_detect(site, "TF"))
t1 <- ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 1),stat='identity', colour = alpha( 'green', 0.7))+
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t1 <- ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2 %>%
filter(Event == 1),
stat='identity', colour = alpha( 'green', 0.7))+
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t2 <- ggplot()+
geom_point(aes(x=dt, y = Ev_yld_norm),
data = SF_event%>%filter(Event == 1))+
geom_point(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = SF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t3 <- ggplot()+
geom_point(aes(x=dt, y = Ev_yld_norm),
data = TF_event%>%filter(Event == 1))+
geom_point(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = TF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t <- t1+ t2 +t3 + plot_layout(ncol=1)
t
t2
t3
t2 <- ggplot()+
geom_line(aes(x=dt, y = Ev_yld_norm),
data = SF_event%>%filter(Event == 1))+
geom_point(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = SF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t3 <- ggplot()+
geom_line(aes(x=dt, y = Ev_yld_norm),
data = TF_event%>%filter(Event == 1))+
geom_point(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = TF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t <- t1+ t2 +t3 + plot_layout(ncol=1)
t
t2 <- ggplot()+
geom_point(aes(x=dt, y = Ev_yld_norm),
data = SF_event%>%filter(Event == 1))+
geom_point(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = SF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t3 <- ggplot()+
geom_point(aes(x=dt, y = Ev_yld_norm),
data = TF_event%>%filter(Event == 1))+
geom_point(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = TF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t <- t1+ t2 +t3 + plot_layout(ncol=1)
t
t2 <- ggplot()+
# geom_point(aes(x=dt, y = Ev_yld_norm),
#            data = SF_event%>%filter(Event == 1))+
geom_point(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = SF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t3 <- ggplot()+
# geom_point(aes(x=dt, y = Ev_yld_norm),
#            data = TF_event%>%filter(Event == 1))+
geom_point(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = TF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t <- t1+ t2 +t3 + plot_layout(ncol=1)
t
t3 <- ggplot()+
# geom_point(aes(x=dt, y = Ev_yld_norm),
#            data = TF_event%>%filter(Event == 1))+
geom_line(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = TF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t <- t1+ t2 +t3 + plot_layout(ncol=1)
t
t2 <- ggplot()+
# geom_point(aes(x=dt, y = Ev_yld_norm),
#            data = SF_event%>%filter(Event == 1))+
geom_line(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = SF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t3 <- ggplot()+
# geom_point(aes(x=dt, y = Ev_yld_norm),
#            data = TF_event%>%filter(Event == 1))+
geom_line(aes(x=dt, y = Ev_yld_norm,group = site, colour = site),
data = TF_rec %>%filter(Event == 1)) +
scale_x_datetime(
breaks = seq(as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST"), "3 hours"),
labels = date_format("%d-%b\n%H:%M", tz = "EST"),
expand = c(0, 0),
limits = c(
as.POSIXct("2018-07-26 09:00:00 EST"),
as.POSIXct("2018-07-27 06:00:00 EST")
)
)
t <- t1+ t2 +t3 + plot_layout(ncol=1)
t
ggplot(rate_convertion) +
geom_col(mapping = aes(x=sec_norm, y=rate_yld,colour = site))+
facet_wrap(~ hobo_event_n, scales = "free")
View(model_rec_events)
View(model_rec_events[[2]][[1]])
ggplot(model_rec_events) +
geom_point(mapping = aes(x=sec_norm, y=.fitted, colour = recession_n))
ggplot(model_rec_events) +
geom_line(mapping = aes(x=sec_norm, y=.fitted, colour = recession_n))
View(rate_convertion)
ggplot(rate_convertion) +
geom_col(mapping = aes(x=sec_norm, y=.fitted, colour = site))+
facet_wrap(~ hobo_event_n, scales = "free")
ggplot(rate_convertion) +
geom_line(mapping = aes(x=sec_norm, y=.fitted, colour = site))+
facet_wrap(~ hobo_event_n, scales = "free")
ggplot(rate_convertion) +
geom_point(mapping = aes(x=sec_norm, y=.fitted, colour = site),
size = 5)+
facet_wrap(~ hobo_event_n, scales = "free") +
theme_bw()
ggplot(rate_convertion) +
geom_point(mapping = aes(x=sec_norm, y=.fitted, colour = site),
size = 4)+
facet_wrap(~ hobo_event_n, scales = "free") +
theme_bw()
ggplot(rate_convertion) +
geom_point(mapping = aes(x=sec_norm, y=.fitted, colour = site),
size = 3.5)+
facet_wrap(~ hobo_event_n, scales = "free") +
theme_bw()
(p1 + p2) / p3
