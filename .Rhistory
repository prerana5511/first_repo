#this column is not classed as an 'interval'
#It must be classed as an interval before lubridate can use it to filter.
##1.1 Define the interval using start and end times----
events2 <- events %>%
mutate(.after = datetime_end_GMT, #indicates where the new column is placed
datetime_interval_EST2 = lubridate::interval(start = datetime_start_GMT,
end = datetime_end_GMT,
tz = "EST"))
class(events2$datetime_interval_EST2)
tz(events2$datetime_interval_EST2) #timezone of interval gives an error
tz(events2$datetime_start_GMT) #timezone of start is UTC/GMT
view(events2) #check the new intervals match the character intervals
#To check the interval is in EST, we can pull out the start
start <- int_start(events2$datetime_interval_EST2[1])
class(start)
tz(start)
#Now you should have an set of intervals to use for filtering
intervals <- events2 %>%
distinct(datetime_interval_EST2, .keep_all = TRUE) %>%
select(Event_Number, datetime_interval_EST2) %>%
mutate(event_dur_sec = dseconds(datetime_interval_EST2),
event_dur_s = as.numeric(intervals$event_dur_sec))
##1.2 Assign event numbers/filter ppt time series based on event intervals ----
ppt2 <- ppt %>%
mutate(.after = datetime_EST, #indicates where the new column is placed
datetime_EST2 = as.POSIXct(datetime_EST, format = "%m/%d/%Y %H:%M")) %>%
filter(minute(datetime_EST2) == 0) %>% #remove subhourly timestamps
select(-W9_Streamflow_mm_hr) %>%
arrange(datetime_EST2) #Order from earliest to latest timestamp
#create an empty dataframe with same headers
ppt_events <- slice(ppt2, 0)
i=1
rm(i)
for (i in 1:length(intervals$Event_Number)) {
interval <- ppt2 %>%
filter(datetime_EST2 %within% intervals$datetime_interval_EST2[i]) %>%
mutate(Event_Number = intervals$Event_Number[i])
ppt_events <- bind_rows(ppt_events, interval)
}
#Check and correct timezone
tz(ppt_events$datetime_EST2)
attr(ppt_events$datetime_EST2, "tzone") <- "EST"
tz(ppt_events$datetime_EST2)
#Now the hourly time series record is filtered with event numbers
#2.0 ---- Create summary statistics for each event
#use tidy R piping and dplyr::group_by and summarize functions
options(dplyr.summarise.inform = TRUE) #I like to see the feedback
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
View(events_summary)
I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(intervals, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /P_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(intervals, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summary$P_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
View(ppt_dt)
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(intervals, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summary$P_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(intervals, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(intervals, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summary$P_event_mm))
View(ppt_events)
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  events_summary %>%
left_join(intervals, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(P_max_event_mm_hr == ppt_events$W9_Precipitation_mm ~ ppt_events$datetime_EST2),
fract_max_P_event = case_when(P_max_event_mm_hr == ppt_events$W9_Precipitation_mm ~
ppt_events$W9_Precipitation_mm /P_event_mm))
rlang::last_error()
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(intervals, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2)
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2)
View(ppt_dt)
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2))
use warnings()
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /P_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(intervals, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /P_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(intervals, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(intervals, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summary$P_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(intervals, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  events_summary %>%
left_join(ppt_events, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(P_max_event_mm_hr == ppt_events$W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(P_max_event_mm_hr == ppt_events$W9_Precipitation_mm ~
ppt_events$W9_Precipitation_mm /P_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(ppt_events, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summaryP_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summaryP_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summaryP_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summaryP_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summaryP_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(events_summary$P_max_event_mm_hr == W9_Precipitation_mm)
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summaryP_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(events_summary$P_max_event_mm_hr == W9_Precipitation_mm)%>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summaryP_event_mm)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, fract_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
View(ppt_dt)
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(events_summary$P_max_event_mm_hr == W9_Precipitation_mm)%>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summaryP_event_mm))
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(events_summary$P_max_event_mm_hr == W9_Precipitation_mm)%>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
fract_max_P_event = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~
W9_Precipitation_mm /events_summaryP_event_mm))
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(events_summary$P_max_event_mm_hr == W9_Precipitation_mm)%>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2))
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(W9_Precipitation_mm != 0 )%>%
mutate(dt_P_mm_hr_event_max = case_when(events_summary$P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2))
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(W9_Precipitation_mm != 0 )
View(ppt_dt)
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(W9_Precipitation_mm != 0 )%>%
mutate(dt_P_mm_hr_event_max = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2))
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(W9_Precipitation_mm != 0 )%>%
mutate(dt_P_mm_hr_event_max = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
Time_taken_max_P_event = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~
event_dur_sec))
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(W9_Precipitation_mm != 0 )%>%
mutate(dt_P_mm_hr_event_max = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
Time_taken_max_P_event = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~
event_dur_sec)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, Time_taken_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
View(ppt_dt)
View(ppt_dt)
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
mutate(dt_P_mm_hr_event_max = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
Time_taken_max_P_event = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~
event_dur_sec)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, Time_taken_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
#I try to avoid overwriting objects with the same name
#It helps with troubleshooting and you can always remove old objects
events_summary <- ppt_events %>%
group_by(Event_Number) %>%
dplyr::summarise(P_event_mm = sum(W9_Precipitation_mm),
P_max_event_mm_hr = max(W9_Precipitation_mm, na.rm = TRUE),
P_mean_event_mm_hr = mean(W9_Precipitation_mm, na.rm = TRUE))%>%
left_join(intervals, ., by = "Event_Number")
ppt_dt <-  ppt_events %>%
left_join(events_summary, .,  by = "Event_Number") %>%
group_by(Event_Number) %>%
filter(W9_Precipitation_mm != 0 )%>%
mutate(dt_P_mm_hr_event_max = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~ datetime_EST2),
Time_taken_max_P_event = case_when(P_max_event_mm_hr == W9_Precipitation_mm ~
event_dur_sec)) %>%
distinct(Event_Number, dt_P_mm_hr_event_max, Time_taken_max_P_event) %>%
drop_na() %>%
dplyr::ungroup() %>%
left_join(events_summary, ., by = "Event_Number")
