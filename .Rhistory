#   dySeries("cumyield_mm", stepPlot = TRUE, fillGraph = TRUE,
#            color = "red")
#Plot throughfall
theme_set(theme_bw())
ggplot(hobo_events2 %>% filter(str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= cumyield_mm, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
#Plot stemflow
ggplot(hobo_events2 %>% filter(!str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= cumyield_mm, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
#normalization to remove negatives----
hobo_norm<- hobo_events2 %>%
group_by(site)%>%
mutate(yield_norm = rate_mm_5min + abs(min(rate_mm_5min)))%>%
select(-rate_mm_5min)%>%
rename("yield_mm" = "yield_norm")
#Smoothing----
hobo_events3 <- hobo_norm %>%
mutate(roll_yield = rollmean(yield_mm, k = 3, fill = NA, align = "center"))
saveRDS(hobo_events3, paste0(here, "/output/hobo_events_smooth.Rds"))
#Stemflow Rates ----
#RAW
ggplot(hobo_events2 %>% filter(str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= rate_mm_5min, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
#SMOOTH
ggplot(hobo_events3 %>% filter(str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= roll_yield, color = site))+
facet_wrap(~hobo_event_n, scales = "free")+
labs(x ="Datetime", y = "yield rate (smooth)")
#Throughfall Rates ----
#RAW
ggplot(hobo_events2 %>% filter(!str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= rate_mm_5min, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
#SMOOTH
ggplot(hobo_events3 %>% filter(!str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= roll_yield, color = site))+
facet_wrap(~hobo_event_n, scales = "free")+
labs(x ="Datetime", y = "yield rate (smooth)")
tree_sp_r2 <- hobo_events3%>%
pivot_wider(names_from = "site", values_from = "roll_yield")%>%
pivot_longer(cols = c("SFA_mm","SFC_mm") , names_to = "Sugar",
values_to = "Sugar_Maple_mm")%>%
pivot_longer(cols = c("SFB_mm","SFD_mm") , names_to = "Yellow",
values_to = "Yellow_Birch_mm")%>%
pivot_longer(cols = c("Yellow_Birch_mm","Sugar_Maple_mm") , names_to = "Stemflow",
values_to = "stemflow_yield")%>%
pivot_longer(cols = c("TFB_mm","TFD_mm") , names_to = "Throughfall",
values_to = "throughfall_yield")%>%
select(-cumyield_mm, -yield_mm, -Sugar, -Yellow)
stemflow_r2 <- tree_sp_r2%>%
filter(!is.na(stemflow_yield))%>%
select(-throughfall_yield, -Throughfall)
throughfall_r2 <- tree_sp_r2%>%
filter(!is.na(throughfall_yield))%>%
select(-stemflow_yield, -Stemflow)
tr <-hobo_events3%>%
pivot_wider(names_from = "site", values_from = "roll_yield")%>%
pivot_longer(cols = c("SFA_mm","SFC_mm") , names_to = "Sugar",
values_to = "Sugar_Maple_mm")%>%
pivot_longer(cols = c("SFB_mm","SFD_mm") , names_to = "Yellow",
values_to = "Yellow_Birch_mm")%>%
pivot_longer(cols = c("TFB_mm","TFD_mm") , names_to = "Throughfall",
values_to = "Throughfall_yield")%>%
select(dt, Sugar_Maple_mm, Yellow_Birch_mm, Throughfall_yield, hobo_event_n, cumyield_mm)%>%
pivot_longer(cols = c("Sugar_Maple_mm", "Throughfall_yield", "Yellow_Birch_mm") , names_to = "flowpath2",
values_to = "path_yield_rate")%>%
na.omit()
#   #distinct(across(path_yield_rate), .keep_all = TRUE)
mix <-inner_join(stemflow_r2, throughfall_r2,
by = c("dt", "hobo_event_n")) %>%
select(-Stemflow, -Throughfall)%>%
pivot_longer(cols = c("stemflow_yield","throughfall_yield") ,
names_to = "flowpath", values_to = "path_yield_rate")%>%
distinct(across(path_yield_rate), .keep_all = TRUE)
mix2 <-inner_join(mix, tr,
by = c("dt", "hobo_event_n", "path_yield_rate")) %>%
distinct(across(path_yield_rate), .keep_all = TRUE)%>%
na.omit()
hobo_event_summary <- mix2 %>%
group_by(flowpath,flowpath2, hobo_event_n) %>%
dplyr::summarise(event_yld_mm = max(cumyield_mm, na.rm=T),
max_rate_mm_5min = max(path_yield_rate, na.rm = T),
mean_rate_mm_5min = mean(path_yield_rate, na.rm=T))
#Stemflow vs Throughfall event stats----
ggplot( hobo_event_summary) +
geom_boxplot(mapping=aes(x=flowpath,y= max_rate_mm_5min)) +
geom_jitter(mapping=aes(x=flowpath, y= max_rate_mm_5min, group = flowpath2, colour= flowpath2))
ggplot( hobo_event_summary) +
geom_boxplot(mapping=aes(x=flowpath,y= mean_rate_mm_5min)) +
geom_jitter(mapping=aes(x=flowpath, y= mean_rate_mm_5min, group = flowpath2, colour= flowpath2))
ggplot( hobo_event_summary) +
geom_boxplot(mapping=aes(x=flowpath,y= event_yld_mm)) +
geom_jitter(mapping=aes(x=flowpath, y= event_yld_mm, group = flowpath2, colour= flowpath2))
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(ggplot2)
library(scales)
hobo_events_r5 <- readRDS(paste0(here, "/output/hobo_events.Rds"))%>%
rename("cumyield_mm" = "yield_mm")
hobo_events_r5_wide <- hobo_events_r5%>%
pivot_wider(names_from = "site", values_from = "cumyield_mm")
SF_xts <- xts(hobo_events_r5_wide %>% select(dt, hobo_event_n, SFA_mm, SFB_mm, SFC_mm, SFD_mm),
order.by=hobo_events_r5_wide$dt)
dygraph(SF_xts) %>% dyAxis("y", valueRange = c(-0.1, 1)) %>%
dyRangeSelector() %>% dyOptions(useDataTimezone = TRUE)
theme_set(theme_bw())
ggplot(hobo_events_r5 %>% filter(str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= cumyield_mm, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(ggplot2)
library(scales)
hobo_events_r5 <- readRDS(paste0(here, "/output/hobo_events.Rds"))%>%
rename("cumyield_mm" = "yield_mm")
hobo_events_r5_wide <- hobo_events_r5%>%
pivot_wider(names_from = "site", values_from = "cumyield_mm")
SF_xts <- xts(hobo_events_r5_wide %>% select(dt, hobo_event_n, SFA_mm, SFB_mm, SFC_mm, SFD_mm),
order.by=hobo_events_r5_wide$dt)
dygraph(SF_xts) %>% dyAxis("y", valueRange = c(-0.1, 1)) %>%
dyRangeSelector() %>% dyOptions(useDataTimezone = TRUE)
theme_set(theme_bw())
ggplot(hobo_events_r5 %>% filter(str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= cumyield_mm, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
View(hobo_events_r5)
hobo_all <- readRDS(paste0(here,"/output/hobo_compiled_wide.Rds"))
View(hobo_all)
r5_events <- readxl::read_excel(paste0(here, "/data/hobo/hobo_new.xlsx"))
r5_events <- readxl::read_excel(paste0(here, "/data/hobo_new_intervals.xlsx"))
View(r5_events)
r5_events <- readxl::read_excel(paste0(here, "/data/hobo_new_intervals.xlsx"))
tz(r5_events$dt_start) #imported time zone is UTC
sapply(r2_events, class)
sapply(r5_events, class)
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST')))
sapply(r5_events, class)
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = end_time_EST,
datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
View(r5_events2)
r5_events <- readxl::read_excel(paste0(here, "/data/hobo_new.xlsx"))
tz(r5_events$dt_start) #imported time zone is UTC
View(r5_events)
r5_events <- readxl::read_excel(paste0(here, "/data/hobo_new.xlsx"))
r5_events2 <- as.Date(as.character(x),
format = "%Y%m%d")
r5_events2 <- as.Date(as.character(r5_events$dt_start),
format = "%Y%m%d")
r5_events <- readr::read_csv(paste0(here, "/data/hobo_new.csv"))
r5_events <- readr::read_csv(paste0(here, "/data/hobo_new_intervals.csv"))
View(r5_events)
r5_events <- readr::read_csv(paste0(here, "/data/hobo_new_intervals.csv"))
tz(r5_events$dt_start) #imported time zone is UTC
sapply(r5_events, class)
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST')))
r5_events <- readr::read_csv(paste0(here, "/data/hobo_new_intervals.csv"))
tz(r5_events$dt_start) #imported time zone is UTC
sapply(r5_events, class)
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = end_time_EST,
datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = end_time_EST,
datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST')))
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = dt_end,
datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = dt_end,
datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end,
tz = "EST"))
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
rlang::last_trace()
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end,
tz = 'EST'),
event_dur_sec = dseconds(datetime_interval_EST))
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST')))
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end),
event_dur_sec = dseconds(datetime_interval_EST))
r5_events <- readxl::read_excel(paste0(here, "/data/hobo_new_intervals_one.xlsx"))
View(hobo_events_r5_wide)
View(r5_events)
events <- readxl::read_excel(paste0(here, "/data/hobo_new_intervals_one.xlsx"))
r5_events <- strptime(events$dt_start, format = "%Y%m%d")
View(events)
events <- readxl::read_excel(paste0(here, "/data/hobo_new_intervals_one.xlsx"))
View(events)
events <- readxl::read_excel(paste0(here, "/data/hobo_new_intervals.xlsx"))
r5_events <- strptime(events$dt_start, format = "%Y%m%d")
events <- readxl::read_excel(paste0(here, "/data/hobo_new_intervals.xlsx"))
r5_events <- as_tibble(strptime(events$dt_start, format = "%Y%m%d"))
r5_events <- as_tibble(as.string(events$dt_start, format = "%Y%m%d"))
r5_events <- as_tibble(as.character(events$dt_start, format = "%Y%m%d"))
View(r5_events)
df <- transform(events, dt_start = as.Date(as.character(dt_start), "%Y%m%d"))
View(df)
df <- transform(events, dt_start = as.character(dt_start), "%Y%m%d")
View(df)
df <- transform(events, dt_start = as.Date(as.character(dt_start), "%Y%m%d"))
View(df)
df <- transform(events, dt_start = as.POSIXct(as.character(events[4]), "%Y%m%d"))
df <- transform(events, dt_start = as.POSIXct(as.character(events[4]), format =  "%m/%d/%Y %H:%M"))
events <- readr::read_csv(paste0(here, "/data/hobo_new_intervals.csv"))
tz(r5_events$dt_start) #imported time zone is UTC
sapply(r5_events, class)
View(events)
events <- readr::read_csv(paste0(here, "/data/hobo_new_intervals.csv"))
tz(r5_events$dt_start) #imported time zone is UTC
sapply(r5_events, class)
View(events)
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end),
event_dur_sec = dseconds(datetime_interval_EST))
events <- readr::read_csv(paste0(here, "/data/hobo_new_intervals.csv"))
tz(r5_events$dt_start) #imported time zone is UTC
sapply(r5_events, class)
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end),
event_dur_sec = dseconds(datetime_interval_EST))
events <- readr::read_csv(paste0(here, "/data/hobo_new_intervals.csv"))
tz(r5_events$dt_start) #imported time zone is UTC
sapply(r5_events, class)
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(datetime_interval_EST = lubridate::interval(start = dt_start,
end = dt_end),
event_dur_sec = dseconds(datetime_interval_EST))
r5_events2 <- r5_events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST')))
View(r5_events)
r5_events2 <- r5_events
View(r5_events2)
events <- readr::read_csv(paste0(here, "/data/hobo_new_intervals.csv"))
View(events)
tz(r5_events$dt_start) #imported time zone is UTC
sapply(r5_events, class)
sapply(events, class)
r5_events <- events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(datetime_interval_EST = lubridate::interval(start = dt_start_EST,
end = dt_end),
event_dur_sec = dseconds(datetime_interval_EST))
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(ggplot2)
library(scales)
hobo_events_r5 <- readRDS(paste0(here, "/output/hobo_events.Rds"))%>%
rename("cumyield_mm" = "yield_mm")
hobo_events_r5_wide <- hobo_events_r5%>%
pivot_wider(names_from = "site", values_from = "cumyield_mm")
SF_xts <- xts(hobo_events_r5_wide %>% select(dt, hobo_event_n, SFA_mm, SFB_mm, SFC_mm, SFD_mm),
order.by=hobo_events_r5_wide$dt)
dygraph(SF_xts) %>% dyAxis("y", valueRange = c(-0.1, 1)) %>%
dyRangeSelector() %>% dyOptions(useDataTimezone = TRUE)
theme_set(theme_bw())
ggplot(hobo_events_r5 %>% filter(str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= cumyield_mm, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
events <- readxl::read_excel(paste0(here, "/data/hobo_new.xlsx"))
tz(events$dt_start) #imported time zone is UTC
sapply(events, class)
r5_events <- events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
View(r5_events)
View(events)
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(ggplot2)
library(scales)
hobo_events_r5 <- readRDS(paste0(here, "/output/hobo_events.Rds"))%>%
rename("cumyield_mm" = "yield_mm")
hobo_events_r5_wide <- hobo_events_r5%>%
pivot_wider(names_from = "site", values_from = "cumyield_mm")
SF_xts <- xts(hobo_events_r5_wide %>% select(dt, hobo_event_n, SFA_mm, SFB_mm, SFC_mm, SFD_mm),
order.by=hobo_events_r5_wide$dt)
dygraph(SF_xts) %>% dyAxis("y", valueRange = c(-0.1, 1)) %>%
dyRangeSelector() %>% dyOptions(useDataTimezone = TRUE)
theme_set(theme_bw())
ggplot(hobo_events_r5 %>% filter(str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= cumyield_mm, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
events <- readxl::read_excel(paste0(here, "/data/hobo_new.xlsx"))
tz(events$dt_start) #imported time zone is UTC
sapply(events, class)
r5_events <- events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
View(r5_events)
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(ggplot2)
library(scales)
hobo_events_r5 <- readRDS(paste0(here, "/output/hobo_events.Rds"))%>%
rename("cumyield_mm" = "yield_mm")
hobo_events_r5_wide <- hobo_events_r5%>%
pivot_wider(names_from = "site", values_from = "cumyield_mm")
SF_xts <- xts(hobo_events_r5_wide %>% select(dt, hobo_event_n, SFA_mm, SFB_mm, SFC_mm, SFD_mm),
order.by=hobo_events_r5_wide$dt)
dygraph(SF_xts) %>% dyAxis("y", valueRange = c(-0.1, 1)) %>%
dyRangeSelector() %>% dyOptions(useDataTimezone = TRUE)
theme_set(theme_bw())
ggplot(hobo_events_r5 %>% filter(str_detect(site, "TF"))) +
geom_line(mapping=aes(x=dt, y= cumyield_mm, color = site))+
facet_wrap(~hobo_event_n, scales = "free")
events <- readxl::read_excel(paste0(here, "/data/hobo_new.xlsx"))
tz(events$dt_start) #imported time zone is UTC
sapply(events, class)
r5_events <- events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
View(r5_events)
events <- readxl::read_excel(paste0(here, "/data/Book1.xlsx"))
events <- readxl::read_excel(paste0(here, "/data/Book1.xlsx"))
tz(events$dt_start) #imported time zone is UTC
sapply(events, class)
r5_events <- events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
events <- readxl::read_excel(paste0(here, "/data/Book1.xlsx"))
tz(events$dt_start) #imported time zone is UTC
sapply(events, class)
r5_events <- events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
View(r5_events)
getApi <- function(x,k=0.9,n=5,finite=TRUE) {
l <- length(x)
y <- rep(NA,times=l)
if(finite) {
if(length(k)==1) {
kn <- rep(NA,times=n)
for(i in 1:n) kn[i] <- k^(n-i)
} else {
n <- length(k)
kn <- sort(k)
}
for(i in (n+1):l) {
y[i] <- t(kn)%*%x[(i-n):(i-1)]
}
getApi <- function(x,k=0.9,n=5,finite=TRUE) {
l <- length(x)
y <- rep(NA,times=l)
if(finite) {
if(length(k)==1) {
kn <- rep(NA,times=n)
for(i in 1:n) kn[i] <- k^(n-i)
} else {
n <- length(k)
kn <- sort(k)
}
for(i in (n+1):l) {
y[i] <- t(kn)%*%x[(i-n):(i-1)]
}
} else {
k <- max(k)
y[2] <- x[1]
for(i in 3:l) {y[i] <- k*y[i-1]+x[i-1]}
}
getApi <- function(x,k=0.9,n=5,finite=TRUE) {
l <- length(x)
y <- rep(NA,times=l)
if(finite) {
if(length(k)==1) {
kn <- rep(NA,times=n)
for(i in 1:n) kn[i] <- k^(n-i)
} else {
n <- length(k)
kn <- sort(k)
}
for(i in (n+1):l) {
y[i] <- t(kn)%*%x[(i-n):(i-1)]
}
} else {
k <- max(k)
y[2] <- x[1]
for(i in 3:l) {y[i] <- k*y[i-1]+x[i-1]}
}
return(y)
}
events <- readxl::read_excel(paste0(here, "/data/Book1.xlsx"))
tz(events$dt_start) #imported time zone is UTC
sapply(events, class)
r5_events <- events %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
tz(events$Start_dt_EST) #imported time zone is UTC
sapply(events, class)
