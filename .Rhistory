<<<<<<< HEAD
<<<<<<< HEAD
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2)
View(nested_hobo_events)
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2) %>%
unnest(data) %>%
ungroup()
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2) %>%
unnest(data) %>%
ungroup() %>%
# mutate(cv = sd(m) / mean(m) * 100) %>% #cv is same for all
distinct(across(recession_n), .keep_all = TRUE)
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2)
View(nested_hobo_events[[2]][[1]])
=======
datetime_EST2 = as.POSIXct(datetime_EST, format = "%m/%d/%Y %H:%M")) %>%
filter(minute(datetime_EST2) == 0) %>% #remove subhourly timestamps
select(-W9_Streamflow_mm_hr) %>%
arrange(datetime_EST2) #Order from earliest to latest timestamp
#load API function
source(paste0(here, "/src/API.R"))
#UNDERSTAND EXAMPLES
## the larger n, the closer are the solutions
x <- rexp(1000)
plot(x) #simulated rain record
#x = rain record; k=decay factor; n=timesteps to use; finite TRUE means use finite number of timesteps indicated by n; finite FALSE means do not use n
api1 <- getApi(x=x,k= 0.9, n=10, finite=TRUE)
plot(api1)
api2 <- getApi(x=x, finite=FALSE)
plot(api2)
plot(api1 ~ api2)
api22 <- getApi(x=x, n=10, finite=FALSE)
plot(api1~api22)
x <- rexp(1000)
api3 <- getApi(x=x,n=300, finite=TRUE)
plot(api3) #notice first api starts at 300
api4 <- getApi(x=x,finite=FALSE)
plot(api4) #api calculated since first day
plot(api3~api4)
par(mfcol=c(2,1))
plot(x=api1,y=api2)
abline(a=0,b=1,col=2)
plot(x=api3,y=api4)
abline(a=0,b=1,col=2)
dev.off()
## user defined weights
x <- rexp(1000)
plot(x)
k <- 1/(15:1)
plot(k)
api5 <- getApi(x=x,k=k, finite=TRUE)
plot(api5)
ppt_api <- ppt %>%
arrange(datetime_EST2) %>%
mutate(api_24hr = getApi(W9_Precipitation_mm, k = 0.9, n = 24, finite = TRUE),
api_10d = getApi(W9_Precipitation_mm, k = 0.9, n = 24*10, finite = TRUE),
api_30d = getApi(W9_Precipitation_mm, k = 0.9, n = 24*30, finite = TRUE),
api_inf = getApi(W9_Precipitation_mm, k = 0.9, finite = FALSE))%>%
select(-datetime_EST)
ggplot(ppt_api) +
geom_line(mapping = aes(x=datetime_EST2, y=api_24hr)) +
geom_line(mapping = aes(x=datetime_EST2, y=api_10d), color = "blue") +
geom_line(mapping = aes(x=datetime_EST2, y=api_30d), color = "green") +
geom_line(mapping = aes(x=datetime_EST2, y=api_inf), color = "red")
#There's not much difference for long time series at hourly intervals
#Next steps: Calculate API as I've done above using daily precipitation
#Generate a table of the average hourly API for each of the 9 events and the average daily API for each event
#understand the double for loop and do it to get the api
#Daily API
ppt_daily <- ppt %>%
mutate(date = as.Date(datetime_EST2)) %>%
group_by(date)%>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x)))%>%
mutate(data = map(data, ~summarise(.x, across(where(is.numeric), sum))))%>%
unnest_wider(data) %>%
ungroup()%>%
mutate(date = as.POSIXct(date))
sapply(ppt_daily, class)
ppt_daily_api <- ppt_daily %>%
arrange(date) %>%
mutate(api_1d = getApi(W9_Precipitation_mm, k = 0.9, n=1, finite = TRUE),
api_10d = getApi(W9_Precipitation_mm, k = 0.9, n = 10, finite = TRUE),
api_30d = getApi(W9_Precipitation_mm, k = 0.9, n = 30, finite = TRUE),
api_inf = getApi(W9_Precipitation_mm, k = 0.9, finite = FALSE),
dt_start = force_tz(as_datetime(date), "EST"),
dt_end = force_tz(as_datetime(date) + hours(23) + minutes(59) + seconds(59),
"EST"),
dt_interval = interval(dt_start, dt_end))
ggplot(ppt_daily_api) +
geom_line(mapping = aes(x=date, y=api_1d)) +
geom_line(mapping = aes(x=date, y=api_10d), color = "blue") +
geom_line(mapping = aes(x=date, y=api_30d), color = "green") +
geom_line(mapping = aes(x=date, y=api_inf), color = "red")
#There is a difference when using daily values
#30d and infinite are not much different
#Filtering daily API events
ppt_daily_api_events <- slice(ppt_daily_api, 0)
for (i in 1:length(curve_intervals2$event_n)) {
interval <- ppt_daily_api %>%
filter(curve_intervals2$datetime_interval_EST[i] %within% dt_interval) %>%
mutate(event_n = curve_intervals2$event_n[i]) %>%
mutate(recession_n = curve_intervals2$recession_n[i])
ppt_daily_api_events  <- bind_rows(ppt_daily_api_events, interval)
}
#There are multiple SF/TF collector events per one ppt record, so there are only 58 periods in the daily ppt record that correspond to the 89 SF/TF event periods
ppt_daily_api_events2 <- ppt_daily_api_events %>%
distinct(event_n, .keep_all = TRUE) %>%
select(c(event_n, contains("api")))
# hourly_ppt_events <- slice(ppt, 0)
#
# for (i in 1:length(curve_intervals2$event_n)) {
#   interval <- ppt %>%
#     filter( datetime_EST2 %within% curve_intervals2$datetime_interval_EST[i]) %>%
#     mutate(event_n = curve_intervals2$event_n[i]) %>%
#     mutate(recession_n = curve_intervals2$recession_n[i])
#
#   hourly_ppt_events <- bind_rows(hourly_ppt_events, interval)
# }
#models
hobo_events_new2 <- hobo_events_new %>%
=======
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
# library(ggplot2)
library(scales)
library(patchwork)
hobo_rec_events <- read_csv(paste0(here, "/data/rec_values.csv"))
#norm
rec_norm <- hobo_rec_events  %>%
>>>>>>> ac0674ada90a598352bc3dcea7dda64fcc6f139a
mutate(sec = seconds(dt) - min(seconds(dt)),
sec_norm = sec/max(sec),
yld_mm_norm1 = yield_mm - min(yield_mm),
yld_mm_norm2 = yld_mm_norm1/max(yld_mm_norm1),
<<<<<<< HEAD
power_yield = 10^yld_mm_norm2)
hobo_events_new2[c('power_yield')][sapply(hobo_events_new2[c('power_yield')], is.infinite)] <- NA
>>>>>>> 41aac662fdc7e0b2627fc662457b5359210ab368
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2) %>%
unnest(data) %>%
ungroup() %>%
# mutate(cv = sd(m) / mean(m) * 100) %>% #cv is same for all
distinct(across(recession_n), .keep_all = TRUE)
ggplot(nested_hobo_events) +
geom_jitter(mapping = aes(x=as.factor(hobo_event_n), y= m, colour = site))
all_events<-inner_join(ppt_daily_api_events, nested_hobo_events,
by = c( "recession_n")) %>%
group_by(recession_n, dt_interval)%>%
mutate(event_dur_num = as.numeric(dt_interval),
units="secs") %>% ##24hrs event
mutate(event_intensity = W9_Precipitation_mm/event_dur_num) %>%
ungroup() %>%
group_by(event_n) %>%
mutate(cv = sd(m) / mean(m) * 100) %>%
ungroup()
sapply(all_events, class)
t1 <-ggplot(all_events %>% filter(str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=cv , y= api_1d, colour = site))
t2 <-ggplot(all_events %>% filter(str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=cv , y= api_10d, colour = site))
t3<-ggplot(all_events %>% filter(str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=cv , y= api_30d, colour = site))
t4<-ggplot(all_events %>% filter(str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=cv , y= api_inf, colour = site))
ggsave(filename = "TF_cv_api_1d.png", plot = t1, path = paste0(here, "/output/figs/"),
device = "png")
ggsave(filename = "TF_cv_api_10d.png", plot = t2, path = paste0(here, "/output/figs/"),
device = "png")
ggsave(filename = "TF_cv_api_30d.png", plot = t3, path = paste0(here, "/output/figs/"),
device = "png")
ggsave(filename = "TF_cv_api_inf.png", plot = t4, path = paste0(here, "/output/figs/"),
device = "png")
s1 <-ggplot(all_events %>% filter(!str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=cv , y= api_1d, colour = site))
s2 <-ggplot(all_events %>% filter(!str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=cv , y= api_10d, colour = site))
s3 <-ggplot(all_events %>% filter(!str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=cv , y= api_30d, colour = site))
s4 <-ggplot(all_events %>% filter(!str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=cv , y= api_inf, colour = site))
ggsave(filename = "SF_cv_api_1d.png", plot = s1, path = paste0(here, "/output/figs/"),
device = "png")
ggsave(filename = "SF_cv_api_10d.png", plot = s2, path = paste0(here, "/output/figs/"),
device = "png")
ggsave(filename = "SF_cv_api_30d.png", plot = s3, path = paste0(here, "/output/figs/"),
device = "png")
ggsave(filename = "SF_cv_api_inf.png", plot = s4, path = paste0(here, "/output/figs/"),
device = "png")
a1 <- ggplot(all_events %>% filter(str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=cv , y= event_intensity, colour = site))
a1
a2 <- ggplot(all_events %>% filter(!str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=cv , y= event_intensity, colour = site))
a2
ggsave(filename = "cv_ei_TF.png", plot = a1, path = paste0(here, "/output/figs/"),
device = "png")
ggsave(filename = "cv_ei_SF.png", plot = a2, path = paste0(here, "/output/figs/"),
device = "png")
p1 <- ggplot(all_events %>% filter(str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=event_intensity, y= m, colour = site),
size = 5) +
theme_bw()
p1
p2 <- ggplot(all_events %>% filter(!str_detect(site, "TF"))) +
geom_jitter(mapping = aes(x=event_intensity, y= m, colour = site),
size = 5) +
theme_bw()
p2
ggsave(filename = "ei_m_TF.png", plot = p1, path = paste0(here, "/output/figs/"),
device = "png")
ggsave(filename = "ei_m_SF.png", plot = p2, path = paste0(here, "/output/figs/"),
device = "png")
# hobo_events_new3 <-hobo_events_new%>%
#   rename("Event"="hobo_event_n",)%>%
#   mutate(yld_mm_norm1 = yield_mm - min(yield_mm),
#          yld_mm_norm2 = yld_mm_norm1/max(yld_mm_norm1))%>%
#   distinct(yld_mm_norm2, .keep_all = TRUE)
#
# all_events2<- inner_join(ppt_events_r5, hobo_events_new3,
#                          by = c( "Event"))%>%
#   select(Event,datetime_EST2,W9_Precipitation_mm, dt, site, yield_mm, recession_n)%>%
#   mutate(yld_mm_norm1 = yield_mm - min(yield_mm),
#          yld_mm_norm2 = yld_mm_norm1/max(yld_mm_norm1))%>%
#   distinct(yld_mm_norm2, .keep_all = TRUE)
ppt_interval <- read_csv(paste0(here, "/data/ppt_interval_fomatted.csv"))
tz(ppt_interval$Start_dt_EST) #imported time zone is UTC
ppt_intervals2 <- ppt_interval %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
class(ppt_intervals2$datetime_interval_EST)
tz(ppt_intervals2$datetime_interval_EST) #timezone of interval gives an error
tz(ppt_intervals2$Start_dt_EST) #timezone of start is EST
#To check the interval is in EST, we can pull out the start
start <- int_start( ppt_intervals2$datetime_interval_EST[1])
class(start)
tz(start)
#create an empty dataframe with same headers
hobo_from_ppt_events <- slice(ppt_interval, 0)
for (i in 1:length(ppt_intervals2$Event)) {
interval <- hobo_events2 %>%
filter(dt %within% ppt_intervals2$datetime_interval_EST[i]) %>%
mutate(Event = ppt_intervals2$Event[i])
hobo_from_ppt_events <- bind_rows(hobo_from_ppt_events, interval)
}
hobo_events_new3 <-hobo_events_new%>%
rename("Recession_yield"="yield_mm","Event"="hobo_event_n")
hobo_events_new4 <-full_join(hobo_from_ppt_events , hobo_events_new3,
by = c(  "dt", "site","Event"))%>%
# filter(rec_dt==dt)%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(recession_n)%>%
mutate(Rec_yld_norm = Recession_yield + abs(min(Recession_yield)))%>%
distinct(Rec_yld_norm, .keep_all = TRUE)%>%
ungroup()%>%
drop_na()
hobo_events3 <-hobo_events2%>%
rename("Event_yield"="yield_mm","Event"="hobo_event_n")
hobo_events4 <- full_join(hobo_from_ppt_events , hobo_events3,
by = c(  "dt","Event", "site"))%>%
# filter(Event_dt==dt)%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(Event)%>%
mutate(Ev_yld_norm = Event_yield + abs(min(Event_yield)))%>%
distinct(Ev_yld_norm, .keep_all = TRUE)%>%
ungroup()
event8_SF_rec <- hobo_events_new4%>%
filter(!str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
event8_SF_event <- hobo_events4%>%
filter(!str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
ppt_events_r5_2 <- ppt_events_r5%>%
rename("dt" ="datetime_EST2")
event8_SF_ppt <- full_join(ppt_events_r5_2 , event8_SF_event,
by = c(  "dt", "Event"))%>%
# filter(Event_dt==datetime_EST2)%>%
select(dt, Event_yield, stemflow, SF_yield, Event, W9_Precipitation_mm)%>%
distinct(SF_yield, .keep_all = TRUE)%>%
drop_na()
event8_SF_ppt = event8_SF_ppt[-1,]  #since the first row was showing event = 1
event8_SF <-inner_join(event8_SF_rec , ppt_events_r5_2,
by = c( "dt", "Event"))%>%
# filter(rec_dt==datetime_EST2)
distinct(SF_yield, .keep_all = TRUE)
ev8_ppt <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r5_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = SF_yield, group = stemflow),
data = event8_SF_ppt%>%filter(Event == 9), colour = alpha( 'yellow', 0.7)) +
geom_point(aes(x= dt, y = SF_yield, group = stemflow, colour = stemflow),
data = event8_SF%>%filter(Event == 9))
# ggplot()+
#   geom_point(aes(x=datetime_EST2, y = SF_yield, group = stemflow,colour = stemflow),
#              data = event8_SF_ppt ) +
#   geom_point(aes(x= datetime_EST2, y = SF_yield),
#              data = event8_SF, colour = alpha( 'blue', 0.7))
p1 <- ev8_ppt + plot_layout(ncol=1)
p1
ggsave(filename = "hobo_n_ppt.png", plot = p1, path = paste0(here, "/output/figs/"),
device = "png")
#highlighting of stemflow done
event8_TF_rec <- hobo_events_new3%>%
filter(str_detect(site, "TF"))%>%
filter(Event== 1)%>%
select(Rec_yld_norm,site, rec_dt, Event, Recession_yield)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
event8_TF_rec <- hobo_events_new4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
event8_TF_event <- hobo_events4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
ppt_events_r5_2 <- ppt_events_r5%>%
rename("dt" ="datetime_EST2")
event8_TF_ppt <- full_join(ppt_events_r5_2 , event8_TF_event,
by = c(  "dt", "Event"))%>%
# filter(Event_dt==datetime_EST2)%>%
select(dt, Event_yield, stemflow, SF_yield, Event, W9_Precipitation_mm)%>%
distinct(TF_yield, .keep_all = TRUE)%>%
drop_na()
event8_TF_ppt <- full_join(ppt_events_r5_2 , event8_TF_event,
by = c(  "dt", "Event"))%>%
# filter(Event_dt==datetime_EST2)%>%
select(dt, Event_yield, Throughfall, TF_yield, Event, W9_Precipitation_mm)%>%
distinct(TF_yield, .keep_all = TRUE)%>%
drop_na()
event8_TF_ppt = event8_TF_ppt[-1,]  #since the first row was showing event = 1
event8_TF <-inner_join(event8_TF_rec , ppt_events_r5_2,
by = c( "dt", "Event"))%>%
# filter(rec_dt==datetime_EST2)
distinct(TF_yield, .keep_all = TRUE)
ev8_ppt_TF <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r5_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = TF_yield, group = stemflow),
data = event8_TF_ppt%>%filter(Event == 9), colour = alpha( 'yellow', 0.7)) +
geom_point(aes(x= dt, y = TF_yield, group = stemflow, colour = stemflow),
data = event8_SF%>%filter(Event == 9))
p2 <- ev8_ppt_TF + plot_layout(ncol=1)
p2
ev8_ppt_TF <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r5_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = TF_yield, group = Throughfall),
data = event8_TF_ppt%>%filter(Event == 9), colour = alpha( 'yellow', 0.7)) +
geom_point(aes(x= dt, y = TF_yield, group = Throughfall, colour = Throughfall),
data = event8_SF%>%filter(Event == 9))
p2 <- ev8_ppt_TF + plot_layout(ncol=1)
p2
View(ev8_ppt)
View(ev8_ppt)
View(event8_TF)
ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r5_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = TF_yield, group = Throughfall),
data = event8_TF_ppt%>%filter(Event == 9), colour = alpha( 'yellow', 0.7)) +
geom_point(aes(x= dt, y = TF_yield, group = Throughfall, colour = Throughfall),
data = event8_SF%>%filter(Event == 9))
ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r5_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = TF_yield, group = Throughfall),
data = event8_TF_ppt%>%filter(Event == 9), colour = alpha( 'yellow', 0.7)) +
geom_point(aes(x= dt, y = TF_yield, group = Throughfall, colour = Throughfall),
data = event8_TF%>%filter(Event == 9))
ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r5_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = SF_yield, group = stemflow),
data = event8_SF_ppt%>%filter(Event == 9), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = SF_yield, group = stemflow, colour = stemflow),
data = event8_SF%>%filter(Event == 9))
View(event8_TF_rec)
View(event8_SF_rec)
ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r5_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = TF_yield, group = Throughfall),
data = event8_TF_ppt%>%filter(Event == 9), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = TF_yield, group = Throughfall, colour = Throughfall),
data = event8_TF%>%filter(Event == 9))
event8_TF_event <- hobo_events4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
ppt_events_r5_2 <- ppt_events_r5%>%
rename("dt" ="datetime_EST2")
event8_TF_ppt <- full_join(ppt_events_r5_2 , event8_TF_event,
by = c(  "dt", "Event"))%>%
# filter(Event_dt==datetime_EST2)%>%
select(dt, Event_yield, Throughfall, TF_yield, Event, W9_Precipitation_mm)%>%
distinct(TF_yield, .keep_all = TRUE)%>%
drop_na()
event8_TF_ppt = event8_TF_ppt[-1,]  #since the first row was showing event = 1
event8_TF <-inner_join(event8_TF_rec , ppt_events_r5_2,
by = c( "dt", "Event"))%>%
# filter(rec_dt==datetime_EST2)
distinct(TF_yield, .keep_all = TRUE)
ev8_ppt_TF <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r5_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = TF_yield, group = Throughfall),
data = event8_TF_ppt%>%filter(Event == 9), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = TF_yield, group = Throughfall, colour = Throughfall),
data = event8_TF%>%filter(Event == 9))
# ggplot()+
#   geom_point(aes(x=datetime_EST2, y = SF_yield, group = stemflow,colour = stemflow),
#              data = event8_SF_ppt ) +
#   geom_point(aes(x= datetime_EST2, y = SF_yield),
#              data = event8_SF, colour = alpha( 'blue', 0.7))
p2 <- ev8_ppt_TF + plot_layout(ncol=1)
p2
ggsave(filename = "hobo_n_ppt_TF.png", plot = p2, path = paste0(here, "/output/figs/"),
device = "png")
hobo_events_new3 <-hobo_events_new%>%
rename("Recession_yield"="yield_mm","Event"="hobo_event_n")
hobo_events_new4 <-full_join(hobo_from_ppt_events , hobo_events_new3,
by = c(  "dt", "site","Event"))%>%
# filter(rec_dt==dt)%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(recession_n)%>%
mutate(Rec_yld_norm = Recession_yield + abs(min(Recession_yield)))%>%
distinct(Rec_yld_norm, .keep_all = TRUE)%>%
ungroup()%>%
drop_na()
hobo_events3 <-hobo_events2%>%
rename("Event_yield"="yield_mm","Event"="hobo_event_n")
hobo_events4 <- full_join(hobo_from_ppt_events , hobo_events3,
by = c(  "dt","Event", "site"))%>%
# filter(Event_dt==dt)%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(Event)%>%
mutate(Ev_yld_norm = Event_yield + abs(min(Event_yield)))%>%
distinct(Ev_yld_norm, .keep_all = TRUE)%>%
ungroup()
event8_SF_rec <- hobo_events_new4%>%
filter(!str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
event8_SF_event <- hobo_events4%>%
filter(!str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
=======
power_yield = 10^yld_mm_norm2)%>%
pivot_wider(names_from = "site", values_from = "power_yield")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
pivot_longer(cols = c("SF-A","SF-C") , names_to = "SM",
>>>>>>> ac0674ada90a598352bc3dcea7dda64fcc6f139a
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B","SF-D") , names_to = "YB",
values_to = "YB_yield")%>%
<<<<<<< HEAD
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
<<<<<<< HEAD
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(SF_yield,TF_yield, .keep_all = TRUE)
all_events2<- inner_join(hourly_ppt_events, hobo_events_new,
by = c( "recession_n"))%>%
group_by(site)%>%
mutate(yld_mm_norm1 = yield_mm - min(yield_mm),
yld_mm_norm2 = yld_mm_norm1/max(yld_mm_norm1)) %>%
ungroup()
event8a <- all_events2%>%
# filter(!str_detect(site, "TF"))%>%
filter(event_n == 1)%>%
pivot_wider(names_from = "site", values_from = "yield_mm_norm2")%>%
pivot_longer(cols = c("SF-A","SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(SF_yield,TF_yield, .keep_all = TRUE)
event8a <- all_events2%>%
# filter(!str_detect(site, "TF"))%>%
filter(event_n == 1)%>%
pivot_wider(names_from = "site", values_from = "yld_mm_norm2")%>%
pivot_longer(cols = c("SF-A","SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(SF_yield,TF_yield, .keep_all = TRUE)
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2,
predict = sec_norm*m + i) %>%
unnest(data) %>%
ungroup() %>%
# mutate(cv = sd(m) / mean(m) * 100) %>% #cv is same for all
distinct(across(recession_n), .keep_all = TRUE)
#models
hobo_events_new2 <- hobo_events_new %>%
mutate(sec = seconds(dt) - min(seconds(dt)),
sec_norm = sec/max(sec),
yld_mm_norm1 = yield_mm - min(yield_mm),
yld_mm_norm2 = yld_mm_norm1/max(yld_mm_norm1),
power_yield = 10^yld_mm_norm2)
hobo_events_new2[c('power_yield')][sapply(hobo_events_new2[c('power_yield')], is.infinite)] <- NA
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2,
predict = sec_norm*m + i) %>%
unnest(data) %>%
ungroup() %>%
# mutate(cv = sd(m) / mean(m) * 100) %>% #cv is same for all
distinct(across(recession_n), .keep_all = TRUE)
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2,
predict = map_dbl(data, ~.$sec_norm*.$m + .$i)) %>%
unnest(data) %>%
ungroup() %>%
# mutate(cv = sd(m) / mean(m) * 100) %>% #cv is same for all
distinct(across(recession_n), .keep_all = TRUE)
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2,
predict = map_dbl(data, ~.x$sec_norm*.x$m + .x$i)) %>%
unnest(data) %>%
ungroup() %>%
# mutate(cv = sd(m) / mean(m) * 100) %>% #cv is same for all
distinct(across(recession_n), .keep_all = TRUE)
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2) %>%
mutate(predict = map_dbl(.x = data, .f= ~.x$sec_norm*.x$m + .x$i)) %>%
unnest(data) %>%
ungroup() %>%
# mutate(cv = sd(m) / mean(m) * 100) %>% #cv is same for all
distinct(across(recession_n), .keep_all = TRUE)
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2) %>%
mutate(predict = map_dbl(.x = data, .f= ~.x$sec_norm*.x$m + .x$i))
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2)
View(nested_hobo_events)
View(nested_hobo_events[[2]][[1]])
nested_hobo_events <- hobo_events_new2 %>%
=======
pivot_longer(cols = c("TF_yield","SM_yield","YB_yield") , names_to = "site",
values_to = "power_yield")%>%
select(-Throughfall, -SM, -YB)%>%
distinct(across(power_yield), .keep_all = TRUE)%>%
drop_na()
#linear models
nested_rec_events <- rec_norm %>%
>>>>>>> ac0674ada90a598352bc3dcea7dda64fcc6f139a
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2) %>%
unnest(data) %>%
ungroup() %>%
distinct(across(recession_n), .keep_all = TRUE)
# newdat <- data.frame(sec_norm=nested_rec_events$sec_norm[1:81])
model_rec_events <- rec_norm %>%
dplyr::group_by(recession_n)%>%
nest() %>%
mutate(m1 = purrr::map(.x = data, .f = ~ lm(power_yield~ sec_norm, data = .))) %>%
mutate(Pred = purrr::map2(.x = m1, .y = data, ~ predict.lm(object =.x))) %>% #predict on new data
select(recession_n, Pred) %>%
unnest(cols = c(Pred))
#Rate for SF-A
# pred_rec_events <- read_csv(paste0(here, "/data/pred.csv"))
norm_rec_events <-inner_join(nested_rec_events, model_rec_events,
by = c("recession_n"))%>%
select(recession_n, sec_norm, Pred, site , dt, hobo_event_n)
# pivot_wider(names_from = "site", values_from = "Pred")%>%
# pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
#                values_to = "TF_yield")%>%
# pivot_longer(cols = c("SF-A","SF-C") , names_to = "SM",
#              values_to = "SM_yield")%>%
# pivot_longer(cols = c("SF-B","SF-D") , names_to = "YB",
#              values_to = "YB_yield")%>%
# pivot_longer(cols = c("TF_yield","SM_yield","YB_yield") , names_to = "site",
#              values_to = "Pred")
ggplot(norm_rec_events) +
geom_point(mapping = aes(x=sec_norm, y=Pred,colour = site))+
facet_wrap(~ hobo_event_n, scales = "free")
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(scales)
library(patchwork)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))
ppt_interval <- read_csv(paste0(here, "/data/ppt_interval_fomatted.csv"))
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
hobo_events_new <-read_csv(paste0(here, "/data/rec_values.csv"))
tz(ppt_interval$Start_dt_EST) #imported time zone is UTC
ppt_intervals2 <- ppt_interval %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
class(ppt_intervals2$datetime_interval_EST)
tz(ppt_intervals2$datetime_interval_EST) #timezone of interval gives an error
tz(ppt_intervals2$Start_dt_EST) #timezone of start is EST
#To check the interval is in EST, we can pull out the start
start <- int_start( ppt_intervals2$datetime_interval_EST[1])
class(start)
tz(start)
hobo_events2 <- hobo_events %>%
mutate(site = case_when(site == "SFA_mm" ~ "SF-A",
site == "SFB_mm" ~ "SF-B",
site == "SFC_mm" ~ "SF-C",
site == "SFD_mm" ~ "SF-D",
site == "TFB_mm" ~ "TF-B",
site == "TFD_mm" ~ "TF-D"))
#Filtering hobo events from ppt intervals
hobo_from_ppt_events <- slice(ppt_interval, 0)
for (i in 1:length(ppt_intervals2$Event)) {
interval <- hobo_events2 %>%
filter(dt %within% ppt_intervals2$datetime_interval_EST[i]) %>%
mutate(Event = ppt_intervals2$Event[i])
hobo_from_ppt_events <- bind_rows(hobo_from_ppt_events, interval)
}
hobo_events_new3 <-hobo_events_new%>%
rename("Recession_yield"="yield_mm","Event"="hobo_event_n")
#Full joining hobo events within ppt interval and Rec events
hobo_events_new4 <-full_join(hobo_from_ppt_events , hobo_events_new3,
by = c(  "dt", "site","Event"))%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(recession_n)%>%
mutate(Rec_yld_norm = Recession_yield + abs(min(Recession_yield)))%>%
distinct(Rec_yld_norm, .keep_all = TRUE)%>%
ungroup()%>%
drop_na()
hobo_events3 <-hobo_events2%>%
rename("Event_yield"="yield_mm","Event"="hobo_event_n")
#Full joining hobo events within ppt interval and only events
hobo_events4 <- full_join(hobo_from_ppt_events , hobo_events3,
by = c(  "dt","Event", "site"))%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(Event)%>%
mutate(Ev_yld_norm = Event_yield + abs(min(Event_yield)))%>%
distinct(Ev_yld_norm, .keep_all = TRUE)%>%
ungroup()
#For Recession_n event
event8_SF_rec <- hobo_events_new4%>%
filter(!str_detect(site, "TF"))%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
#For hobo_n event
event8_SF_event <- hobo_events4%>%
filter(!str_detect(site, "TF"))%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
ppt_events_r7_2 <- ppt_events_r7%>%
rename("dt" ="datetime_EST2")
event8_SF_ppt <- full_join(ppt_events_r7_2 , event8_SF_event,
by = c(  "dt", "Event"))%>%
select(dt, Event_yield, stemflow, SF_yield, Event, W9_Precipitation_mm)%>%
distinct(SF_yield, .keep_all = TRUE)%>%
drop_na()
# event8_SF_ppt = event8_SF_ppt[-1,]  #since the first row was showing event = 1
#Rec and PPT
event8_SF <-inner_join(event8_SF_rec , ppt_events_r7_2,
by = c( "dt", "Event"))%>%
distinct(SF_yield, .keep_all = TRUE)
ev8_ppt <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = SF_yield, group = stemflow),
data = event8_SF_ppt%>%filter(Event == 9), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = SF_yield, group = stemflow, colour = stemflow),
data = event8_SF%>%filter(Event == 9))
p1 <- ev8_ppt + plot_layout(ncol=1)
p1
ggsave(filename = "hobo_n_ppt_SF.png", plot = p1, path = paste0(here, "/output/figs/"),
device = "png")
#highlighting of stemflow done
#Throughfall
event8_TF_rec <- hobo_events_new4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
event8_TF_event <- hobo_events4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
ppt_events_r7_2 <- ppt_events_r7%>%
rename("dt" ="datetime_EST2")
event8_TF_ppt <- full_join(ppt_events_r7_2 , event8_TF_event,
by = c(  "dt", "Event"))%>%
select(dt, Event_yield, Throughfall, TF_yield, Event, W9_Precipitation_mm)%>%
distinct(TF_yield, .keep_all = TRUE)%>%
drop_na()
event8_TF_ppt = event8_TF_ppt[-1,]  #since the first row was showing event = 1
event8_TF <-inner_join(event8_TF_rec , ppt_events_r7_2,
by = c( "dt", "Event"))%>%
# filter(rec_dt==datetime_EST2)
distinct(TF_yield, .keep_all = TRUE)
ev8_ppt_TF <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 5),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = TF_yield, group = Throughfall),
data = event8_TF_ppt%>%filter(Event == 5), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = TF_yield, group = Throughfall, colour = Throughfall),
data = event8_TF%>%filter(Event == 5))
# ggplot()+
#   geom_point(aes(x=datetime_EST2, y = SF_yield, group = stemflow,colour = stemflow),
#              data = event8_SF_ppt ) +
#   geom_point(aes(x= datetime_EST2, y = SF_yield),
#              data = event8_SF, colour = alpha( 'blue', 0.7))
p2 <- ev8_ppt_TF + plot_layout(ncol=1)
p2
ggsave(filename = "hobo_n_ppt_TF.png", plot = p2, path = paste0(here, "/output/figs/"),
device = "png")
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(scales)
library(patchwork)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))
View(ppt_events_r7)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))%>%
select(Event, datetime_EST2, W9_Precipitation_mm)%>%
drop_na()
View(ppt_events_r7)
ppt_interval <- read_csv(paste0(here, "/data/ppt_interval_fomatted.csv"))
View(ppt_interval)
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
View(hobo_events)
hobo_events_new <-read_csv(paste0(here, "/data/rec_values.csv"))
View(hobo_events)
View(hobo_events_new)
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(scales)
library(patchwork)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))%>%
select(Event, datetime_EST2, W9_Precipitation_mm)%>%
drop_na()
ppt_interval <- read_csv(paste0(here, "/data/ppt_interval_fomatted.csv"))
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
hobo_events_rec <-read_csv(paste0(here, "/data/rec_values.csv"))
View(hobo_events_rec)
tz(ppt_interval$Start_dt_EST) #imported time zone is UTC
ppt_intervals2 <- ppt_interval %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
class(ppt_intervals2$datetime_interval_EST)
tz(ppt_intervals2$datetime_interval_EST) #timezone of interval gives an error
tz(ppt_intervals2$Start_dt_EST) #timezone of start is EST
#To check the interval is in EST, we can pull out the start
start <- int_start( ppt_intervals2$datetime_interval_EST[1])
class(start)
tz(start)
hobo_events2 <- hobo_events %>%
mutate(site = case_when(site == "SFA_mm" ~ "SF-A",
site == "SFB_mm" ~ "SF-B",
site == "SFC_mm" ~ "SF-C",
site == "SFD_mm" ~ "SF-D",
site == "TFB_mm" ~ "TF-B",
site == "TFD_mm" ~ "TF-D"))
#Filtering hobo events from ppt intervals
hobo_from_ppt_events <- slice(ppt_interval, 0)
for (i in 1:length(ppt_intervals2$Event)) {
interval <- hobo_events2 %>%
filter(dt %within% ppt_intervals2$datetime_interval_EST[i]) %>%
mutate(Event = ppt_intervals2$Event[i])
hobo_from_ppt_events <- bind_rows(hobo_from_ppt_events, interval)
}
<<<<<<< HEAD
rm(ts, int, interval)
#Check and correct timezone
tz(hobo_events_new$dt)
xts <- xts(hobo_events_new %>% select(dt, yield_mm), order.by=hobo_events_new$dt)
dygraph(xts) %>% #dyAxis("y", valueRange = c(-1, 1)) %>%
# dyOptions(connectSeparatedPoints = FALSE)%>%
dygraphs::dyOptions(drawPoints = T, strokeWidth = 0, pointSize = 5)%>%
dyRangeSelector()
#connect separated points
#Testing the antecedent precipitation index function
#load and format precipitation data
ppt <- readr::read_csv(paste0(here, "/data/W9_Streamflow_Precipitation.csv")) %>%
mutate(.after = datetime_EST, #indicates where the new column is placed
datetime_EST2 = as.POSIXct(datetime_EST, format = "%m/%d/%Y %H:%M")) %>%
filter(minute(datetime_EST2) == 0) %>% #remove subhourly timestamps
select(-W9_Streamflow_mm_hr) %>%
arrange(datetime_EST2) #Order from earliest to latest timestamp
#load API function
source(paste0(here, "/src/API.R"))
#UNDERSTAND EXAMPLES
## the larger n, the closer are the solutions
x <- rexp(1000)
plot(x) #simulated rain record
#x = rain record; k=decay factor; n=timesteps to use; finite TRUE means use finite number of timesteps indicated by n; finite FALSE means do not use n
api1 <- getApi(x=x,k= 0.9, n=10, finite=TRUE)
plot(api1)
api2 <- getApi(x=x, finite=FALSE)
plot(api2)
plot(api1 ~ api2)
api22 <- getApi(x=x, n=10, finite=FALSE)
plot(api1~api22)
x <- rexp(1000)
api3 <- getApi(x=x,n=300, finite=TRUE)
plot(api3) #notice first api starts at 300
api4 <- getApi(x=x,finite=FALSE)
plot(api4) #api calculated since first day
plot(api3~api4)
par(mfcol=c(2,1))
plot(x=api1,y=api2)
hobo_events_new2 <- hobo_events_new %>%
mutate(sec = seconds(dt) - min(seconds(dt)),
sec_norm = sec/max(sec),
yld_mm_norm1 = yield_mm - min(yield_mm),
yld_mm_norm2 = yld_mm_norm1/max(yld_mm_norm1),
power_yield = 10^yld_mm_norm2)
hobo_events_new2[c('power_yield')][sapply(hobo_events_new2[c('power_yield')], is.infinite)] <- NA
nested_hobo_events <- hobo_events_new2 %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2) %>%
unnest(data) %>%
ungroup() %>%
# mutate(cv = sd(m) / mean(m) * 100) %>% #cv is same for all
distinct(across(recession_n), .keep_all = TRUE)
ggplot(nested_hobo_events) +
geom_jitter(mapping = aes(x=as.factor(hobo_event_n), y= m, colour = site))
dygraph(xts) %>% #dyAxis("y", valueRange = c(-1, 1)) %>%
# dyOptions(connectSeparatedPoints = FALSE)%>%
dygraphs::dyOptions(drawPoints = T, strokeWidth = 0, pointSize = 5)%>%
dyRangeSelector()
=======
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
ppt_events_r5_2 <- ppt_events_r5%>%
rename("dt" ="datetime_EST2")
event8_SF_ppt <- full_join(ppt_events_r5_2 , event8_SF_event,
by = c(  "dt", "Event"))%>%
# filter(Event_dt==datetime_EST2)%>%
select(dt, Event_yield, stemflow, SF_yield, Event, W9_Precipitation_mm)%>%
distinct(SF_yield, .keep_all = TRUE)%>%
drop_na()
event8_SF_ppt = event8_SF_ppt[-1,]  #since the first row was showing event = 1
event8_SF <-inner_join(event8_SF_rec , ppt_events_r5_2,
by = c( "dt", "Event"))%>%
# filter(rec_dt==datetime_EST2)
distinct(SF_yield, .keep_all = TRUE)
ev8_ppt <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r5_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
=======
View(hobo_from_ppt_events)
hobo_events_new3 <-hobo_events_new%>%
rename("Recession_yield"="yield_mm","Event"="hobo_event_n")
hobo_events_rec2 <-hobo_events_rec%>%
rename("Recession_yield"="yield_mm","Event"="hobo_event_n")
View(hobo_events_rec2)
#Full joining hobo events within ppt interval and Rec events
hobo_events_new4 <-full_join(hobo_from_ppt_events , hobo_events_rec2,
by = c(  "dt", "site","Event"))%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(recession_n)%>%
mutate(Rec_yld_norm = Recession_yield + abs(min(Recession_yield)))%>%
distinct(Rec_yld_norm, .keep_all = TRUE)%>%
ungroup()%>%
drop_na()
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(scales)
library(patchwork)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))%>%
select(Event, datetime_EST2, W9_Precipitation_mm)%>%
drop_na()
ppt_interval <- read_csv(paste0(here, "/data/ppt_interval_fomatted.csv"))
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
hobo_events_rec <-read_csv(paste0(here, "/data/rec_values.csv"))
tz(ppt_interval$Start_dt_EST) #imported time zone is UTC
ppt_intervals2 <- ppt_interval %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
class(ppt_intervals2$datetime_interval_EST)
tz(ppt_intervals2$datetime_interval_EST) #timezone of interval gives an error
tz(ppt_intervals2$Start_dt_EST) #timezone of start is EST
#To check the interval is in EST, we can pull out the start
start <- int_start( ppt_intervals2$datetime_interval_EST[1])
class(start)
tz(start)
hobo_events2 <- hobo_events %>%
mutate(site = case_when(site == "SFA_mm" ~ "SF-A",
site == "SFB_mm" ~ "SF-B",
site == "SFC_mm" ~ "SF-C",
site == "SFD_mm" ~ "SF-D",
site == "TFB_mm" ~ "TF-B",
site == "TFD_mm" ~ "TF-D"))
#Filtering hobo events from ppt intervals
hobo_from_ppt_events <- slice(ppt_interval, 0)
for (i in 1:length(ppt_intervals2$Event)) {
interval <- hobo_events2 %>%
filter(dt %within% ppt_intervals2$datetime_interval_EST[i]) %>%
mutate(Event = ppt_intervals2$Event[i])
hobo_from_ppt_events <- bind_rows(hobo_from_ppt_events, interval)
}
hobo_events_rec2 <-hobo_events_rec%>%
rename("Recession_yield"="yield_mm","Event"="hobo_event_n")
#Full joining hobo events within ppt interval and Rec events
hobo_events_rec3 <-full_join(hobo_from_ppt_events , hobo_events_rec2,
by = c(  "dt", "site","Event"))%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(recession_n)%>%
mutate(Rec_yld_norm = Recession_yield + abs(min(Recession_yield)))%>%
distinct(Rec_yld_norm, .keep_all = TRUE)%>%
ungroup()%>%
drop_na()
View(hobo_events_rec3)
hobo_events3 <-hobo_events2%>%
rename("Event_yield"="yield_mm","Event"="hobo_event_n")
#Full joining hobo events within ppt interval and only events
hobo_events4 <- full_join(hobo_from_ppt_events , hobo_events3,
by = c(  "dt","Event", "site"))%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(Event)%>%
mutate(Ev_yld_norm = Event_yield + abs(min(Event_yield)))%>%
distinct(Ev_yld_norm, .keep_all = TRUE)%>%
ungroup()
#For Recession_n event
event8_SF_rec <- hobo_events_new4%>%
filter(!str_detect(site, "TF"))%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
event8_SF_rec <- hobo_events_rec3%>%
filter(!str_detect(site, "TF"))%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
View(event8_SF_rec)
#For hobo_n event
event8_SF_event <- hobo_events4%>%
filter(!str_detect(site, "TF"))%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
ppt_events_r7_2 <- ppt_events_r7%>%
rename("dt" ="datetime_EST2")
event8_SF_ppt <- full_join(ppt_events_r7_2 , event8_SF_event,
by = c(  "dt", "Event"))%>%
select(dt, Event_yield, stemflow, SF_yield, Event, W9_Precipitation_mm)%>%
distinct(SF_yield, .keep_all = TRUE)%>%
drop_na()
View(event8_SF_ppt)
View(event8_SF_rec)
View(event8_SF_ppt)
#Rec and PPT
event8_SF <-inner_join(event8_SF_rec , ppt_events_r7_2,
by = c( "dt", "Event"))%>%
distinct(SF_yield, .keep_all = TRUE)
View(event8_SF)
ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = SF_yield, group = stemflow),
data = event8_SF_ppt%>%filter(Event == 9), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = SF_yield, group = stemflow, colour = stemflow),
data = event8_SF%>%filter(Event == 9))
ev8_ppt <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
>>>>>>> ac0674ada90a598352bc3dcea7dda64fcc6f139a
geom_point(aes(x=dt, y = SF_yield, group = stemflow),
data = event8_SF_ppt%>%filter(Event == 9), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = SF_yield, group = stemflow, colour = stemflow),
data = event8_SF%>%filter(Event == 9))
p1 <- ev8_ppt + plot_layout(ncol=1)
p1
<<<<<<< HEAD
ggsave(filename = "hobo_n_ppt_SF.png", plot = p1, path = paste0(here, "/output/figs/"),
device = "png")
>>>>>>> 41aac662fdc7e0b2627fc662457b5359210ab368
=======
event8_TF_rec <- hobo_events_new4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
event8_TF_rec <- hobo_events_rec3%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
event8_TF_event <- hobo_events4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
ppt_events_r7_2 <- ppt_events_r7%>%
rename("dt" ="datetime_EST2")
event8_TF_ppt <- full_join(ppt_events_r7_2 , event8_TF_event,
by = c(  "dt", "Event"))%>%
select(dt, Event_yield, Throughfall, TF_yield, Event, W9_Precipitation_mm)%>%
distinct(TF_yield, .keep_all = TRUE)%>%
drop_na()
event8_TF_ppt = event8_TF_ppt[-1,]  #since the first row was showing event = 1
event8_TF <-inner_join(event8_TF_rec , ppt_events_r7_2,
by = c( "dt", "Event"))%>%
# filter(rec_dt==datetime_EST2)
distinct(TF_yield, .keep_all = TRUE)
ev8_ppt_TF <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 5),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = TF_yield, group = Throughfall),
data = event8_TF_ppt%>%filter(Event == 5), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = TF_yield, group = Throughfall, colour = Throughfall),
data = event8_TF%>%filter(Event == 5))
# ggplot()+
#   geom_point(aes(x=datetime_EST2, y = SF_yield, group = stemflow,colour = stemflow),
#              data = event8_SF_ppt ) +
#   geom_point(aes(x= datetime_EST2, y = SF_yield),
#              data = event8_SF, colour = alpha( 'blue', 0.7))
p2 <- ev8_ppt_TF + plot_layout(ncol=1)
p2
View(ev8_ppt)
View(ev8_ppt_TF)
View(event8_SF)
View(event8_SF_ppt)
>>>>>>> ac0674ada90a598352bc3dcea7dda64fcc6f139a
