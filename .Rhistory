library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
# library(ggplot2)
library(scales)
library(patchwork)
hobo_rec_events <- read_csv(paste0(here, "/data/rec_values.csv"))
#norm
rec_norm <- hobo_rec_events  %>%
mutate(sec = seconds(dt) - min(seconds(dt)),
sec_norm = sec/max(sec),
yld_mm_norm1 = yield_mm - min(yield_mm),
yld_mm_norm2 = yld_mm_norm1/max(yld_mm_norm1),
power_yield = 10^yld_mm_norm2)%>%
pivot_wider(names_from = "site", values_from = "power_yield")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
pivot_longer(cols = c("SF-A","SF-C") , names_to = "SM",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B","SF-D") , names_to = "YB",
values_to = "YB_yield")%>%
pivot_longer(cols = c("TF_yield","SM_yield","YB_yield") , names_to = "site",
values_to = "power_yield")%>%
select(-Throughfall, -SM, -YB)%>%
distinct(across(power_yield), .keep_all = TRUE)%>%
drop_na()
#linear models
nested_rec_events <- rec_norm %>%
drop_na()%>%
group_by(recession_n) %>%
nest() %>%
mutate(nobs = map_dbl(.x = data, .f = ~nrow(.x))) %>%
mutate(mod = map(data, ~lm(power_yield ~ sec_norm, data= .)),
r = map_dbl(.x = data, .f = ~cor(y=(.x$power_yield), x = .x$sec_norm,
use = "na.or.complete")),
m = map_dbl(data, ~lm(power_yield~ sec_norm, data = .)$coefficients[[2]]),
i = map_dbl(data, ~lm(power_yield ~ sec_norm, data = .)$coefficients[[1]]),
r2 = r^2) %>%
unnest(data) %>%
ungroup() %>%
distinct(across(recession_n), .keep_all = TRUE)
# newdat <- data.frame(sec_norm=nested_rec_events$sec_norm[1:81])
model_rec_events <- rec_norm %>%
dplyr::group_by(recession_n)%>%
nest() %>%
mutate(m1 = purrr::map(.x = data, .f = ~ lm(power_yield~ sec_norm, data = .))) %>%
mutate(Pred = purrr::map2(.x = m1, .y = data, ~ predict.lm(object =.x))) %>% #predict on new data
select(recession_n, Pred) %>%
unnest(cols = c(Pred))
#Rate for SF-A
# pred_rec_events <- read_csv(paste0(here, "/data/pred.csv"))
norm_rec_events <-inner_join(nested_rec_events, model_rec_events,
by = c("recession_n"))%>%
select(recession_n, sec_norm, Pred, site , dt, hobo_event_n)
# pivot_wider(names_from = "site", values_from = "Pred")%>%
# pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
#                values_to = "TF_yield")%>%
# pivot_longer(cols = c("SF-A","SF-C") , names_to = "SM",
#              values_to = "SM_yield")%>%
# pivot_longer(cols = c("SF-B","SF-D") , names_to = "YB",
#              values_to = "YB_yield")%>%
# pivot_longer(cols = c("TF_yield","SM_yield","YB_yield") , names_to = "site",
#              values_to = "Pred")
ggplot(norm_rec_events) +
geom_point(mapping = aes(x=sec_norm, y=Pred,colour = site))+
facet_wrap(~ hobo_event_n, scales = "free")
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(scales)
library(patchwork)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))
ppt_interval <- read_csv(paste0(here, "/data/ppt_interval_fomatted.csv"))
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
hobo_events_new <-read_csv(paste0(here, "/data/rec_values.csv"))
tz(ppt_interval$Start_dt_EST) #imported time zone is UTC
ppt_intervals2 <- ppt_interval %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
class(ppt_intervals2$datetime_interval_EST)
tz(ppt_intervals2$datetime_interval_EST) #timezone of interval gives an error
tz(ppt_intervals2$Start_dt_EST) #timezone of start is EST
#To check the interval is in EST, we can pull out the start
start <- int_start( ppt_intervals2$datetime_interval_EST[1])
class(start)
tz(start)
hobo_events2 <- hobo_events %>%
mutate(site = case_when(site == "SFA_mm" ~ "SF-A",
site == "SFB_mm" ~ "SF-B",
site == "SFC_mm" ~ "SF-C",
site == "SFD_mm" ~ "SF-D",
site == "TFB_mm" ~ "TF-B",
site == "TFD_mm" ~ "TF-D"))
#Filtering hobo events from ppt intervals
hobo_from_ppt_events <- slice(ppt_interval, 0)
for (i in 1:length(ppt_intervals2$Event)) {
interval <- hobo_events2 %>%
filter(dt %within% ppt_intervals2$datetime_interval_EST[i]) %>%
mutate(Event = ppt_intervals2$Event[i])
hobo_from_ppt_events <- bind_rows(hobo_from_ppt_events, interval)
}
hobo_events_new3 <-hobo_events_new%>%
rename("Recession_yield"="yield_mm","Event"="hobo_event_n")
#Full joining hobo events within ppt interval and Rec events
hobo_events_new4 <-full_join(hobo_from_ppt_events , hobo_events_new3,
by = c(  "dt", "site","Event"))%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(recession_n)%>%
mutate(Rec_yld_norm = Recession_yield + abs(min(Recession_yield)))%>%
distinct(Rec_yld_norm, .keep_all = TRUE)%>%
ungroup()%>%
drop_na()
hobo_events3 <-hobo_events2%>%
rename("Event_yield"="yield_mm","Event"="hobo_event_n")
#Full joining hobo events within ppt interval and only events
hobo_events4 <- full_join(hobo_from_ppt_events , hobo_events3,
by = c(  "dt","Event", "site"))%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(Event)%>%
mutate(Ev_yld_norm = Event_yield + abs(min(Event_yield)))%>%
distinct(Ev_yld_norm, .keep_all = TRUE)%>%
ungroup()
#For Recession_n event
event8_SF_rec <- hobo_events_new4%>%
filter(!str_detect(site, "TF"))%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
#For hobo_n event
event8_SF_event <- hobo_events4%>%
filter(!str_detect(site, "TF"))%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
ppt_events_r7_2 <- ppt_events_r7%>%
rename("dt" ="datetime_EST2")
event8_SF_ppt <- full_join(ppt_events_r7_2 , event8_SF_event,
by = c(  "dt", "Event"))%>%
select(dt, Event_yield, stemflow, SF_yield, Event, W9_Precipitation_mm)%>%
distinct(SF_yield, .keep_all = TRUE)%>%
drop_na()
# event8_SF_ppt = event8_SF_ppt[-1,]  #since the first row was showing event = 1
#Rec and PPT
event8_SF <-inner_join(event8_SF_rec , ppt_events_r7_2,
by = c( "dt", "Event"))%>%
distinct(SF_yield, .keep_all = TRUE)
ev8_ppt <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = SF_yield, group = stemflow),
data = event8_SF_ppt%>%filter(Event == 9), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = SF_yield, group = stemflow, colour = stemflow),
data = event8_SF%>%filter(Event == 9))
p1 <- ev8_ppt + plot_layout(ncol=1)
p1
ggsave(filename = "hobo_n_ppt_SF.png", plot = p1, path = paste0(here, "/output/figs/"),
device = "png")
#highlighting of stemflow done
#Throughfall
event8_TF_rec <- hobo_events_new4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
event8_TF_event <- hobo_events4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
ppt_events_r7_2 <- ppt_events_r7%>%
rename("dt" ="datetime_EST2")
event8_TF_ppt <- full_join(ppt_events_r7_2 , event8_TF_event,
by = c(  "dt", "Event"))%>%
select(dt, Event_yield, Throughfall, TF_yield, Event, W9_Precipitation_mm)%>%
distinct(TF_yield, .keep_all = TRUE)%>%
drop_na()
event8_TF_ppt = event8_TF_ppt[-1,]  #since the first row was showing event = 1
event8_TF <-inner_join(event8_TF_rec , ppt_events_r7_2,
by = c( "dt", "Event"))%>%
# filter(rec_dt==datetime_EST2)
distinct(TF_yield, .keep_all = TRUE)
ev8_ppt_TF <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 5),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = TF_yield, group = Throughfall),
data = event8_TF_ppt%>%filter(Event == 5), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = TF_yield, group = Throughfall, colour = Throughfall),
data = event8_TF%>%filter(Event == 5))
# ggplot()+
#   geom_point(aes(x=datetime_EST2, y = SF_yield, group = stemflow,colour = stemflow),
#              data = event8_SF_ppt ) +
#   geom_point(aes(x= datetime_EST2, y = SF_yield),
#              data = event8_SF, colour = alpha( 'blue', 0.7))
p2 <- ev8_ppt_TF + plot_layout(ncol=1)
p2
ggsave(filename = "hobo_n_ppt_TF.png", plot = p2, path = paste0(here, "/output/figs/"),
device = "png")
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(scales)
library(patchwork)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))
View(ppt_events_r7)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))%>%
select(Event, datetime_EST2, W9_Precipitation_mm)%>%
drop_na()
View(ppt_events_r7)
ppt_interval <- read_csv(paste0(here, "/data/ppt_interval_fomatted.csv"))
View(ppt_interval)
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
View(hobo_events)
hobo_events_new <-read_csv(paste0(here, "/data/rec_values.csv"))
View(hobo_events)
View(hobo_events_new)
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(scales)
library(patchwork)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))%>%
select(Event, datetime_EST2, W9_Precipitation_mm)%>%
drop_na()
ppt_interval <- read_csv(paste0(here, "/data/ppt_interval_fomatted.csv"))
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
hobo_events_rec <-read_csv(paste0(here, "/data/rec_values.csv"))
View(hobo_events_rec)
tz(ppt_interval$Start_dt_EST) #imported time zone is UTC
ppt_intervals2 <- ppt_interval %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
class(ppt_intervals2$datetime_interval_EST)
tz(ppt_intervals2$datetime_interval_EST) #timezone of interval gives an error
tz(ppt_intervals2$Start_dt_EST) #timezone of start is EST
#To check the interval is in EST, we can pull out the start
start <- int_start( ppt_intervals2$datetime_interval_EST[1])
class(start)
tz(start)
hobo_events2 <- hobo_events %>%
mutate(site = case_when(site == "SFA_mm" ~ "SF-A",
site == "SFB_mm" ~ "SF-B",
site == "SFC_mm" ~ "SF-C",
site == "SFD_mm" ~ "SF-D",
site == "TFB_mm" ~ "TF-B",
site == "TFD_mm" ~ "TF-D"))
#Filtering hobo events from ppt intervals
hobo_from_ppt_events <- slice(ppt_interval, 0)
for (i in 1:length(ppt_intervals2$Event)) {
interval <- hobo_events2 %>%
filter(dt %within% ppt_intervals2$datetime_interval_EST[i]) %>%
mutate(Event = ppt_intervals2$Event[i])
hobo_from_ppt_events <- bind_rows(hobo_from_ppt_events, interval)
}
View(hobo_from_ppt_events)
hobo_events_new3 <-hobo_events_new%>%
rename("Recession_yield"="yield_mm","Event"="hobo_event_n")
hobo_events_rec2 <-hobo_events_rec%>%
rename("Recession_yield"="yield_mm","Event"="hobo_event_n")
View(hobo_events_rec2)
#Full joining hobo events within ppt interval and Rec events
hobo_events_new4 <-full_join(hobo_from_ppt_events , hobo_events_rec2,
by = c(  "dt", "site","Event"))%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(recession_n)%>%
mutate(Rec_yld_norm = Recession_yield + abs(min(Recession_yield)))%>%
distinct(Rec_yld_norm, .keep_all = TRUE)%>%
ungroup()%>%
drop_na()
library(here)
here <- here()
here
library(tidyverse)
library(lubridate)
library(fs)
library(xts)
library(dygraphs)
library(readxl)
library(scales)
library(patchwork)
ppt_events_r7 <- read_csv(paste0(here, "/output/ppt_events.csv"))%>%
select(Event, datetime_EST2, W9_Precipitation_mm)%>%
drop_na()
ppt_interval <- read_csv(paste0(here, "/data/ppt_interval_fomatted.csv"))
hobo_events <- readRDS(paste0(here, "/output/hobo_events.Rds"))
hobo_events_rec <-read_csv(paste0(here, "/data/rec_values.csv"))
tz(ppt_interval$Start_dt_EST) #imported time zone is UTC
ppt_intervals2 <- ppt_interval %>%
mutate(across(.cols = lubridate::is.POSIXct,
~ lubridate::force_tz(., tzone='EST'))) %>%
mutate(.after = End_dt_EST,
datetime_interval_EST = lubridate::interval(start = Start_dt_EST,
end = End_dt_EST,
tz = "EST"),
event_dur_sec = dseconds(datetime_interval_EST))
class(ppt_intervals2$datetime_interval_EST)
tz(ppt_intervals2$datetime_interval_EST) #timezone of interval gives an error
tz(ppt_intervals2$Start_dt_EST) #timezone of start is EST
#To check the interval is in EST, we can pull out the start
start <- int_start( ppt_intervals2$datetime_interval_EST[1])
class(start)
tz(start)
hobo_events2 <- hobo_events %>%
mutate(site = case_when(site == "SFA_mm" ~ "SF-A",
site == "SFB_mm" ~ "SF-B",
site == "SFC_mm" ~ "SF-C",
site == "SFD_mm" ~ "SF-D",
site == "TFB_mm" ~ "TF-B",
site == "TFD_mm" ~ "TF-D"))
#Filtering hobo events from ppt intervals
hobo_from_ppt_events <- slice(ppt_interval, 0)
for (i in 1:length(ppt_intervals2$Event)) {
interval <- hobo_events2 %>%
filter(dt %within% ppt_intervals2$datetime_interval_EST[i]) %>%
mutate(Event = ppt_intervals2$Event[i])
hobo_from_ppt_events <- bind_rows(hobo_from_ppt_events, interval)
}
hobo_events_rec2 <-hobo_events_rec%>%
rename("Recession_yield"="yield_mm","Event"="hobo_event_n")
#Full joining hobo events within ppt interval and Rec events
hobo_events_rec3 <-full_join(hobo_from_ppt_events , hobo_events_rec2,
by = c(  "dt", "site","Event"))%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(recession_n)%>%
mutate(Rec_yld_norm = Recession_yield + abs(min(Recession_yield)))%>%
distinct(Rec_yld_norm, .keep_all = TRUE)%>%
ungroup()%>%
drop_na()
View(hobo_events_rec3)
hobo_events3 <-hobo_events2%>%
rename("Event_yield"="yield_mm","Event"="hobo_event_n")
#Full joining hobo events within ppt interval and only events
hobo_events4 <- full_join(hobo_from_ppt_events , hobo_events3,
by = c(  "dt","Event", "site"))%>%
select(-Start_dt_EST, -End_dt_EST, -datetime_interval_EST,-event_dur_sec,-Notes )%>%
group_by(Event)%>%
mutate(Ev_yld_norm = Event_yield + abs(min(Event_yield)))%>%
distinct(Ev_yld_norm, .keep_all = TRUE)%>%
ungroup()
#For Recession_n event
event8_SF_rec <- hobo_events_new4%>%
filter(!str_detect(site, "TF"))%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
event8_SF_rec <- hobo_events_rec3%>%
filter(!str_detect(site, "TF"))%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
View(event8_SF_rec)
#For hobo_n event
event8_SF_event <- hobo_events4%>%
filter(!str_detect(site, "TF"))%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("SF-A", "SF-C") , names_to = "Sugar_Maple",
values_to = "SM_yield")%>%
pivot_longer(cols = c("SF-B", "SF-D") , names_to = "Yellow_Birch",
values_to = "YB_yield")%>%
pivot_longer(cols = c("SM_yield","YB_yield") , names_to = "stemflow",
values_to = "SF_yield")%>%
select(-Sugar_Maple, -Yellow_Birch)%>%
distinct(SF_yield, .keep_all = TRUE)
ppt_events_r7_2 <- ppt_events_r7%>%
rename("dt" ="datetime_EST2")
event8_SF_ppt <- full_join(ppt_events_r7_2 , event8_SF_event,
by = c(  "dt", "Event"))%>%
select(dt, Event_yield, stemflow, SF_yield, Event, W9_Precipitation_mm)%>%
distinct(SF_yield, .keep_all = TRUE)%>%
drop_na()
View(event8_SF_ppt)
View(event8_SF_rec)
View(event8_SF_ppt)
#Rec and PPT
event8_SF <-inner_join(event8_SF_rec , ppt_events_r7_2,
by = c( "dt", "Event"))%>%
distinct(SF_yield, .keep_all = TRUE)
View(event8_SF)
ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = SF_yield, group = stemflow),
data = event8_SF_ppt%>%filter(Event == 9), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = SF_yield, group = stemflow, colour = stemflow),
data = event8_SF%>%filter(Event == 9))
ev8_ppt <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 9),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = SF_yield, group = stemflow),
data = event8_SF_ppt%>%filter(Event == 9), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = SF_yield, group = stemflow, colour = stemflow),
data = event8_SF%>%filter(Event == 9))
p1 <- ev8_ppt + plot_layout(ncol=1)
p1
event8_TF_rec <- hobo_events_new4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
event8_TF_rec <- hobo_events_rec3%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Rec_yld_norm,site, recession_n, dt, Event, Recession_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Rec_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
event8_TF_event <- hobo_events4%>%
filter(str_detect(site, "TF"))%>%
# filter(Event== 4)%>%
select(Ev_yld_norm,site, dt, Event, Event_yield, yield_mm)%>%
pivot_wider(names_from = "site", values_from = "Ev_yld_norm")%>%
pivot_longer(cols = c("TF-B","TF-D") , names_to = "Throughfall",
values_to = "TF_yield")%>%
distinct(TF_yield, .keep_all = TRUE)
ppt_events_r7_2 <- ppt_events_r7%>%
rename("dt" ="datetime_EST2")
event8_TF_ppt <- full_join(ppt_events_r7_2 , event8_TF_event,
by = c(  "dt", "Event"))%>%
select(dt, Event_yield, Throughfall, TF_yield, Event, W9_Precipitation_mm)%>%
distinct(TF_yield, .keep_all = TRUE)%>%
drop_na()
event8_TF_ppt = event8_TF_ppt[-1,]  #since the first row was showing event = 1
event8_TF <-inner_join(event8_TF_rec , ppt_events_r7_2,
by = c( "dt", "Event"))%>%
# filter(rec_dt==datetime_EST2)
distinct(TF_yield, .keep_all = TRUE)
ev8_ppt_TF <-ggplot()+
geom_bar(aes(x= dt, y= W9_Precipitation_mm),
data =ppt_events_r7_2%>%filter(Event == 5),stat='identity', colour = alpha( 'green', 0.7))+
geom_point(aes(x=dt, y = TF_yield, group = Throughfall),
data = event8_TF_ppt%>%filter(Event == 5), colour = alpha( 'black', 0.7)) +
geom_point(aes(x= dt, y = TF_yield, group = Throughfall, colour = Throughfall),
data = event8_TF%>%filter(Event == 5))
# ggplot()+
#   geom_point(aes(x=datetime_EST2, y = SF_yield, group = stemflow,colour = stemflow),
#              data = event8_SF_ppt ) +
#   geom_point(aes(x= datetime_EST2, y = SF_yield),
#              data = event8_SF, colour = alpha( 'blue', 0.7))
p2 <- ev8_ppt_TF + plot_layout(ncol=1)
p2
View(ev8_ppt)
View(ev8_ppt_TF)
View(event8_SF)
View(event8_SF_ppt)
